{"ast":null,"code":"import _objectSpread from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/Listing.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\n\nvar _ = require('lodash');\n\nvar Listing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Listing, _Component);\n\n  function Listing() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Listing);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Listing)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      authors: [],\n      list: []\n    };\n    return _this;\n  }\n\n  _createClass(Listing, [{\n    key: \"list\",\n    value: function list() {\n      var _this2 = this;\n\n      firebase.firestore().collection('Books').onSnapshot(function (querySnapshot) {\n        var books = [];\n        querySnapshot.forEach(function (doc) {\n          return books.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          books: books\n        });\n      });\n      firebase.firestore().collection('Authors').onSnapshot(function (querySnapshot) {\n        var authors = [];\n        querySnapshot.forEach(function (doc) {\n          return authors.push(_objectSpread({\n            author: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          authors: authors\n        });\n      });\n      this.setState.list = b.reduce(function (map, item) {\n        return map.set(item.id, item.name);\n      }, new Map());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var list = this.state.list;\n      this.list();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"List of known books:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, list.map(function (el) {\n        return React.createElement(\"li\", {\n          key: el.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"\\\"\", el.title, \"\\\" \\u2014 \", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, el.name));\n      })));\n    }\n  }]);\n\n  return Listing;\n}(Component);\n\nexport default Listing;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/Listing.js"],"names":["React","Component","firebase","_","require","Listing","state","books","authors","list","firestore","collection","onSnapshot","querySnapshot","forEach","doc","push","id","data","setState","author","b","reduce","map","item","set","name","Map","el","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAIC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;IAEMC,O;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,IAAI,EAAE;AAHF,K;;;;;;2BAMD;AAAA;;AACHP,MAAAA,QAAQ,CAACQ,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,UAFL,CAEgB,UAAAC,aAAa,EAAI;AACzB,YAAMN,KAAK,GAAG,EAAd;AACAM,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG;AAAA,iBACrBR,KAAK,CAACS,IAAN;AAAYC,YAAAA,EAAE,EAAEF,GAAG,CAACE;AAApB,aAA2BF,GAAG,CAACG,IAAJ,EAA3B,EADqB;AAAA,SAAzB;;AAGA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACZ,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACH,OARL;AAUAL,MAAAA,QAAQ,CAACQ,SAAT,GACKC,UADL,CACgB,SADhB,EAEKC,UAFL,CAEgB,UAAAC,aAAa,EAAI;AACzB,YAAML,OAAO,GAAG,EAAhB;AACAK,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG;AAAA,iBACrBP,OAAO,CAACQ,IAAR;AAAcI,YAAAA,MAAM,EAAEL,GAAG,CAACE;AAA1B,aAAiCF,GAAG,CAACG,IAAJ,EAAjC,EADqB;AAAA,SAAzB;;AAGA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACX,UAAAA,OAAO,EAAEA;AAAV,SAAd;AACH,OARL;AAUA,WAAKW,QAAL,CAAcV,IAAd,GAAqBY,CAAC,CAACC,MAAF,CAAS,UAACC,GAAD,EAAMC,IAAN;AAAA,eAAeD,GAAG,CAACE,GAAJ,CAAQD,IAAI,CAACP,EAAb,EAAiBO,IAAI,CAACE,IAAtB,CAAf;AAAA,OAAT,EAAqD,IAAIC,GAAJ,EAArD,CAArB;AAEH;;;6BAEQ;AAAA,UACElB,IADF,GACU,KAAKH,KADf,CACEG,IADF;AAEL,WAAKA,IAAL;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACc,GAAL,CAAS,UAAAK,EAAE;AAAA,eACR;AAAI,UAAA,GAAG,EAAEA,EAAE,CAACX,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMW,EAAE,CAACC,KADT,gBACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,EAAE,CAACF,IAAP,CADzB,CADQ;AAAA,OAAX,CADL,CAFJ,CADJ;AAYH;;;;EAlDiBzB,S;;AAoDtB,eAAeI,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport firebase from 'firebase'\n\nvar _ = require('lodash');\n\nclass Listing extends Component {\n    \n    \n    state = {\n        books: [],\n        authors: [],\n        list: []\n    }\n\n    list() {\n        firebase.firestore()\n            .collection('Books')\n            .onSnapshot(querySnapshot => {\n                const books = []\n                querySnapshot.forEach(doc =>\n                    books.push({id: doc.id, ...doc.data()})\n                )\n                this.setState({books: books})\n            })\n\n        firebase.firestore()\n            .collection('Authors')\n            .onSnapshot(querySnapshot => {\n                const authors = []\n                querySnapshot.forEach(doc =>\n                    authors.push({author: doc.id, ...doc.data()})\n                )\n                this.setState({authors: authors})\n            })\n\n        this.setState.list = b.reduce((map, item) => map.set(item.id, item.name), new Map);\n\n    }\n\n    render() {\n        const {list} = this.state\n        this.list()\n\n        return(\n            <div>\n                <p>List of known books:</p>\n                <ul>\n                    {list.map(el =>\n                        <li key={el.id}>\n                            \"{el.title}\" &mdash; <i>{el.name}</i>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Listing;"]},"metadata":{},"sourceType":"module"}