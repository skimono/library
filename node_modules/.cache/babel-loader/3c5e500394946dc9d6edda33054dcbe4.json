{"ast":null,"code":"import _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/Options.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { BasicButton } from '../styles.js';\n\nvar Options =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Options, _Component);\n\n  function Options(props) {\n    var _this;\n\n    _classCallCheck(this, Options);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Options).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n      }\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Options, [{\n    key: \"render\",\n    // addImage = e => {\n    //   e.preventDefault();\n    //   var url = ''\n    //   // var bookRef = firebase.firestore().collection(\"Authors\").doc(this.props.books.authorid).collection('Books').doc(this.props.books.id);\n    //   const { filename } = this.state;\n    //   var storageRef = firebase.storage().ref('/images/' + filename);\n    //   var uploadImage = storageRef.put(this.state.image);\n    //   uploadImage.on('state_changed', function (snapshot) {\n    //   }, function (error) {\n    //   }, function () {\n    //     uploadImage.snapshot.ref.getDownloadURL()\n    //       .then((downloadURL) => {\n    //         url = downloadURL\n    //         bookRef.update({\n    //           coverUrl: url\n    //         }).then(() => console.log('Cover Added', url))\n    //       })\n    //   });\n    // }\n    value: function render() {\n      var books = this.props.books;\n      return React.createElement(\"form\", {\n        onSubmit: this.addImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        on: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, books.map(function (b) {\n        return React.createElement(\"option\", {\n          key: b.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, b.title, \" \\u2014 \", b.author);\n      })), React.createElement(BasicButton, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Options;\n}(Component);\n\nexport default Options;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/Options.js"],"names":["React","Component","firebase","BasicButton","Options","props","handleChange","e","target","files","image","setState","filename","name","bind","books","addImage","map","b","id","title","author"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAMnBC,YANmB,GAMJ,UAAAC,CAAC,EAAI;AAClB,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrB,YAAMC,KAAK,GAAGH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;;AACA,cAAKE,QAAL,CAAc;AAAA,iBAAO;AAAED,YAAAA,KAAK,EAALA;AAAF,WAAP;AAAA,SAAd;;AACA,cAAKC,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEF,KAAK,CAACG;AAAlB,SAAd;AACD;AACF,KAZkB;;AAGjB,UAAKP,YAAL,GAAoB,MAAKA,YAAL,CAAkBQ,IAAlB,uDAApB;AAHiB;AAIlB;;;;AAUD;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA,UACCC,KADD,GACW,KAAKV,KADhB,CACCU,KADD;AAGP,aAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKV,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,KAAK,CAACE,GAAN,CAAU,UAAAC,CAAC;AAAA,eACV;AAAQ,UAAA,GAAG,EAAEA,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,CAAC,CAACE,KADL,cACqBF,CAAC,CAACG,MADvB,CADU;AAAA,OAAX,CADH,CAFF,EASE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAFF;AAgBD;;;;EAzDmBpB,S;;AA2DtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { BasicButton } from '../styles.js';\n\nclass Options extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }))\n      this.setState({ filename: image.name });\n    }\n  }\n\n  // addImage = e => {\n  //   e.preventDefault();\n\n  //   var url = ''\n  //   // var bookRef = firebase.firestore().collection(\"Authors\").doc(this.props.books.authorid).collection('Books').doc(this.props.books.id);\n\n  //   const { filename } = this.state;\n  //   var storageRef = firebase.storage().ref('/images/' + filename);\n  //   var uploadImage = storageRef.put(this.state.image);\n\n  //   uploadImage.on('state_changed', function (snapshot) {\n  //   }, function (error) {\n  //   }, function () {\n  //     uploadImage.snapshot.ref.getDownloadURL()\n  //       .then((downloadURL) => {\n  //         url = downloadURL\n  //         bookRef.update({\n  //           coverUrl: url\n  //         }).then(() => console.log('Cover Added', url))\n  //       })\n  //   });\n  // }\n\n  render() {\n    const { books } = this.props;\n\n    return (\n\n      <form onSubmit={this.addImage}>\n        <input type=\"file\" onChange={this.handleChange} />\n        <select on>\n          {books.map(b =>\n            <option key={b.id}>\n              {b.title} &mdash; {b.author}\n            </option>\n          )}\n        </select>\n        <BasicButton type=\"submit\">\n          Submit\n      </BasicButton>\n      </form>\n    )\n  }\n}\nexport default Options;"]},"metadata":{},"sourceType":"module"}