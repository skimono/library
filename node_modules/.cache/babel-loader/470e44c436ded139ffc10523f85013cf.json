{"ast":null,"code":"import _objectSpread from \"/home/s15196/test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/s15196/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/s15196/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/s15196/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/s15196/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/s15196/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/s15196/test/src/components/Books.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books(props) {\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Books).call(this, props));\n\n    _this.onClickSetFav = function () {\n      var favState = _this.state.fav;\n      var booksRef = firebase.firestore().collection(\"Books\").doc(_this.props.book.id);\n      _this.state.fav ? booksRef.update({\n        favedBy: firebase.firestore.FieldValue.arrayRemove(firebase.auth().currentUser.uid)\n      }) : booksRef.update({\n        favedBy: firebase.firestore.FieldValue.arrayUnion(firebase.auth().currentUser.uid)\n      });\n      favState = !favState;\n\n      _this.setState({\n        fav: favState\n      });\n\n      console.log(_this.props.book.id);\n    };\n\n    _this.state = {\n      fav: false\n    };\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"checkIfFaved\",\n    value: function checkIfFaved() {\n      var _this2 = this;\n\n      firebase.firestore().collection('Books').where(\"favedBy\", \"\").onSnapshot(function (querySnapshot) {\n        var books = [];\n        querySnapshot.forEach(function (doc) {\n          return books.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          books: books\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var book = this.props.book;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, book.title, \" \\u2014 \", book.author, ' ', React.createElement(\"button\", {\n        onClick: this.onClickSetFav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.fav ? React.createElement(\"i\", {\n        className: \"fas fa-heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"far fa-heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/home/s15196/test/src/components/Books.js"],"names":["React","Component","firebase","Books","props","onClickSetFav","favState","state","fav","booksRef","firestore","collection","doc","book","id","update","favedBy","FieldValue","arrayRemove","auth","currentUser","uid","arrayUnion","setState","console","log","where","onSnapshot","querySnapshot","books","forEach","push","data","title","author"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAoBnBC,aApBmB,GAoBH,YAAM;AACpB,UAAIC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,GAA1B;AAEA,UAAIC,QAAQ,GAAGP,QAAQ,CAACQ,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6C,MAAKR,KAAL,CAAWS,IAAX,CAAgBC,EAA7D,CAAf;AACA,YAAKP,KAAL,CAAWC,GAAX,GACAC,QAAQ,CAACM,MAAT,CAAgB;AACfC,QAAAA,OAAO,EAAEd,QAAQ,CAACQ,SAAT,CAAmBO,UAAnB,CAA8BC,WAA9B,CAA0ChB,QAAQ,CAACiB,IAAT,GAAgBC,WAAhB,CAA4BC,GAAtE;AADM,OAAhB,CADA,GAKAZ,QAAQ,CAACM,MAAT,CAAgB;AACfC,QAAAA,OAAO,EAAEd,QAAQ,CAACQ,SAAT,CAAmBO,UAAnB,CAA8BK,UAA9B,CAAyCpB,QAAQ,CAACiB,IAAT,GAAgBC,WAAhB,CAA4BC,GAArE;AADM,OAAhB,CALA;AAUAf,MAAAA,QAAQ,GAAG,CAACA,QAAZ;;AACA,YAAKiB,QAAL,CAAc;AAAEf,QAAAA,GAAG,EAAEF;AAAP,OAAd;;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKrB,KAAL,CAAWS,IAAX,CAAgBC,EAA5B;AACD,KArCkB;;AAEjB,UAAKP,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAFiB;AAKlB;;;;mCAEe;AAAA;;AACdN,MAAAA,QAAQ,CAACQ,SAAT,GACSC,UADT,CACoB,OADpB,EAESe,KAFT,CAEe,SAFf,EAE0B,EAF1B,EAGSC,UAHT,CAGoB,UAAAC,aAAa,EAAI;AACzB,YAAMC,KAAK,GAAG,EAAd;AACAD,QAAAA,aAAa,CAACE,OAAd,CAAsB,UAAAlB,GAAG;AAAA,iBACrBiB,KAAK,CAACE,IAAN;AAAYjB,YAAAA,EAAE,EAAEF,GAAG,CAACE;AAApB,aAA2BF,GAAG,CAACoB,IAAJ,EAA3B,EADqB;AAAA,SAAzB;;AAGA,QAAA,MAAI,CAACT,QAAL,CAAc;AAACM,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACH,OATT;AAUD;;;6BAqBQ;AAAA,UACChB,IADD,GACU,KAAKT,KADf,CACCS,IADD;AAGP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACAA,IAAI,CAACoB,KADL,cACqBpB,IAAI,CAACqB,MAD1B,EACkC,GADlC,EAED;AAAQ,QAAA,OAAO,EAAE,KAAK7B,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWC,GAAX,GACC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAFC,CADF,CADF;AAcD;;;;EAzDiBP,S;;AA2DpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase'\n\nclass Books extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fav: false\n    };\n  }\n  \n  checkIfFaved () {\n  \t\tfirebase.firestore()\n            .collection('Books')\n            .where(\"favedBy\", \"\")\n            .onSnapshot(querySnapshot => {\n                const books = []\n                querySnapshot.forEach(doc =>\n                    books.push({id: doc.id, ...doc.data()})\n                )\n                this.setState({books: books})\n            })\n  }\n  \n  onClickSetFav = () => {\n    let favState = this.state.fav;\n    \n    var booksRef = firebase.firestore().collection(\"Books\").doc(this.props.book.id);\n    this.state.fav ? (\n    booksRef.update({\n    \tfavedBy: firebase.firestore.FieldValue.arrayRemove(firebase.auth().currentUser.uid)\n    \t})\n    ):(\n    booksRef.update({\n    \tfavedBy: firebase.firestore.FieldValue.arrayUnion(firebase.auth().currentUser.uid)\n    \t})\n    )\n    \n    favState = !favState;\n    this.setState({ fav: favState });\n    console.log(this.props.book.id)\n  };\n\n  render() {\n    const { book } = this.props;\n\n    return (\n      <React.Fragment>\n        <li>\n\t      {book.title} &mdash; {book.author}{' '}\n\t      <button onClick={this.onClickSetFav}>\n\t        {this.state.fav ? (\n\t          <i className=\"fas fa-heart\" />\n\t       \t  ) : (\n\t          <i className=\"far fa-heart\" />\n\t        )}\n\t      </button>\n\t    </li>\n      </React.Fragment>\n    );\n  }\n}\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}