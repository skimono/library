{"ast":null,"code":"import _defineProperty from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Books from './Books';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook() {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n\n        _this.setState({\n          url: '/image/' + image.name\n        });\n      }\n    };\n\n    _this.updateInput = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.updateInputTable = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, [e.target.value]));\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        console.log('Image added');\n      });\n      firebase.firestore().collection('Authors').add({\n        name: _this.state.author,\n        addedBy: firebase.auth().currentUser.uid\n      }).then(function (docRef) {\n        console.log('Author added', docRef.id);\n        firebase.firestore().collection('Authors').doc(docRef.id).collection('Books').add({\n          title: _this.state.title,\n          coverUrl: _this.state.url,\n          favedBy: []\n        }).then(function (docRef) {\n          return console.log('Book added', docRef.id);\n        }).then(function () {\n          _this.setState({\n            title: [],\n            author: '',\n            image: null,\n            filename: '',\n            url: ''\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      title: [],\n      author: '',\n      image: null,\n      filename: '',\n      url: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"addAuthor\",\n    value: function addAuthor() {}\n  }, {\n    key: \"addBook\",\n    value: function addBook() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInputTable,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Books, {\n        books: this.props.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Books","AddBook","handleChange","e","target","files","image","setState","filename","name","url","updateInput","value","updateInputTable","addToDb","preventDefault","state","storageRef","storage","ref","uploadImage","put","on","snapshot","error","console","log","firestore","collection","add","author","addedBy","auth","currentUser","uid","then","docRef","id","doc","title","coverUrl","favedBy","bind","props","books"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Books from './Books';\n\nclass AddBook extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            title: [],\n            author: '',\n            image: null,\n            filename: '',\n            url: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n            this.setState({ url: ('/image/' + image.name) });\n        }\n    }\n\n    updateInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    updateInputTable = e => {\n        this.setState({\n            [e.target.name]: [e.target.value]\n        });\n    }\n\n    addAuthor() {\n\n    }\n\n    addBook() {\n\n    }\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n\n        }, function (error) {\n\n        }, function () {\n            console.log('Image added')\n        });\n\n        firebase.firestore().collection('Authors').add({\n            name: this.state.author,\n            addedBy: firebase.auth().currentUser.uid,\n        }).then(docRef => {\n            console.log('Author added', docRef.id);\n            firebase.firestore().collection('Authors').doc(docRef.id).collection('Books').add({\n                title: this.state.title,\n                coverUrl: this.state.url,\n                favedBy: []\n            }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                this.setState({\n                    title: [],\n                    author: '',\n                    image: null,\n                    filename: '',\n                    url: ''\n                })\n            })\n        })\n    };\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div>\n                    <p>Add additional books:</p>\n                    <form onSubmit={this.addToDb}>\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            onChange={this.updateInputTable}\n                            value={this.state.title}\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"author\"\n                            placeholder=\"Author\"\n                            onChange={this.updateInput}\n                            value={this.state.author}\n                        />\n                        <input type=\"file\"\n                            onChange={this.handleChange}\n                        />\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n                <br />\n                <Books books={this.props.books}/>\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}