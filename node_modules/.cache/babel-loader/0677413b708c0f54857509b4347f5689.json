{"ast":null,"code":"import _defineProperty from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n\n        _this.setState({\n          url: '/image/' + image.name\n        });\n      }\n    };\n\n    _this.updateInput = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.updateInputTable = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, [e.target.value]));\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        console.log('Image added');\n      });\n      var author = _this.state.author;\n      var d = new Date();\n      var n = d.toLocaleTimeString();\n      var flag = null;\n\n      _this.props.authors.map(function (e) {\n        if (e.name == author) {\n          flag = e.id;\n        }\n      });\n\n      var db = firebase.firestore().collection('Authors');\n\n      if (flag == null) {\n        db.add({\n          name: _this.state.author,\n          lastEdited: n\n        }).then(function (docRef) {\n          console.log('Author added', docRef.id);\n          db.doc(docRef.id).collection('Books').add({\n            title: _this.state.title,\n            coverUrl: _this.state.url,\n            favedBy: []\n          }).then(function (docRef) {\n            return console.log('Book added', docRef.id);\n          }).then(function () {\n            _this.setState({\n              title: [],\n              author: '',\n              image: null,\n              filename: '',\n              url: ''\n            });\n          });\n        });\n      } else {\n        db.doc(flag).collection('Books').add({\n          title: _this.state.title,\n          coverUrl: _this.state.url,\n          favedBy: []\n        }).then(function (docRef) {\n          return console.log('Book added', docRef.id);\n        }).then(function () {\n          _this.setState({\n            title: [],\n            author: '',\n            image: null,\n            filename: '',\n            url: ''\n          }).then(function () {\n            db.doc(flag).add({\n              lastEdited: n\n            });\n            console.log('Author updated', n);\n          });\n\n          flag = null;\n        });\n      }\n    };\n\n    _this.state = {\n      title: [],\n      author: '',\n      image: null,\n      filename: '',\n      url: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInputTable,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.props.books.author), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Listing, {\n        books: this.props.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Listing","AddBook","props","handleChange","e","target","files","image","setState","filename","name","url","updateInput","value","updateInputTable","addToDb","preventDefault","state","storageRef","storage","ref","uploadImage","put","on","snapshot","error","console","log","author","d","Date","n","toLocaleTimeString","flag","authors","map","id","db","firestore","collection","add","lastEdited","then","docRef","doc","title","coverUrl","favedBy","bind","books"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Listing from './Listing';\n\nclass AddBook extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: [],\n            author: '',\n            image: null,\n            filename: '',\n            url: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n            this.setState({ url: ('/image/' + image.name) });\n        }\n    }\n\n    updateInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    updateInputTable = e => {\n        this.setState({\n            [e.target.name]: [e.target.value]\n        });\n    }\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n        }, function (error) {\n        }, function () {\n            console.log('Image added')\n        });\n\n        let author = this.state.author\n        var d = new Date();\n        var n = d.toLocaleTimeString();\n        var flag = null\n        this.props.authors.map(function (e) {\n            if (e.name == author) { flag = e.id }\n        })\n        var db = firebase.firestore().collection('Authors')\n        if (flag == null) {\n            db.add({\n                name: this.state.author,\n                lastEdited: n\n            }).then(docRef => {\n                console.log('Author added', docRef.id);\n                db.doc(docRef.id).collection('Books').add({\n                    title: this.state.title,\n                    coverUrl: this.state.url,\n                    favedBy: []\n                }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                    this.setState({\n                        title: [],\n                        author: '',\n                        image: null,\n                        filename: '',\n                        url: ''\n                    })\n                })\n            })\n        } else {\n            db.doc(flag).collection('Books').add({\n                title: this.state.title,\n                coverUrl: this.state.url,\n                favedBy: []\n            }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                this.setState({\n                    title: [],\n                    author: '',\n                    image: null,\n                    filename: '',\n                    url: ''\n                }).then(() => {\n                    db.doc(flag).add({\n                        lastEdited: n\n                    })\n                    console.log('Author updated', n);\n                })\n                flag = null;\n            })\n        }\n\n\n    };\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div>\n                    <p>Add additional books:</p>\n                    <form onSubmit={this.addToDb}>\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            onChange={this.updateInputTable}\n                            value={this.state.title}\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"author\"\n                            placeholder=\"Author\"\n                            onChange={this.updateInput}\n                            value={this.state.author}\n                        />\n                        <input type=\"file\"\n                            onChange={this.handleChange}\n                        />\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n                <p>{this.props.books.author}</p>\n                <br />\n                <Listing books={this.props.books} />\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}