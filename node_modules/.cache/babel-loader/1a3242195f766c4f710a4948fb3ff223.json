{"ast":null,"code":"import _defineProperty from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n\n        _this.setState({\n          url: '/image/' + image.name\n        });\n      }\n    };\n\n    _this.updateInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        console.log('Image added');\n      });\n      var author = _this.state.author;\n      var flag = null;\n\n      _this.props.authors.map(function (e) {\n        if (e.name == author) {\n          flag = e.id;\n        }\n      });\n\n      var db = firebase.firestore().collection('Authors');\n\n      if (flag == null) {\n        db.add({\n          name: _this.state.author,\n          addedBy: firebase.auth().currentUser.uid\n        }).then(function (docRef) {\n          console.log('Author added', docRef.id);\n          db.doc(docRef.id).collection('Books').add({\n            title: _this.state.title,\n            genre: _this.state.genre,\n            paperback: _this.state.paperback,\n            publisher: _this.state.publisher,\n            language: _this.state.language,\n            publicationDate: _this.state.publicationDate,\n            coverUrl: _this.state.url,\n            favedBy: []\n          }).then(function (docRef) {\n            return console.log('Book added', docRef.id);\n          }).then(function () {\n            window.location.reload();\n          });\n        });\n      } else {\n        db.doc(flag).collection('Books').add({\n          title: _this.state.title,\n          genre: _this.state.genre,\n          paperback: _this.state.paperback,\n          publisher: _this.state.publisher,\n          language: _this.state.language,\n          publicationDate: _this.state.publicationDate,\n          coverUrl: _this.state.url,\n          favedBy: []\n        }).then(function (docRef) {\n          return console.log('Book added', docRef.id);\n        }).then(function () {\n          window.location.reload();\n        });\n      }\n    };\n\n    _this.state = {\n      title: '',\n      author: '',\n      genre: '',\n      paperback: '',\n      publisher: '',\n      language: '',\n      publicationDate: '',\n      image: null,\n      filename: '',\n      url: '',\n      formErrors: {\n        title: '',\n        author: '',\n        genre: '',\n        paperback: '',\n        publisher: '',\n        language: '',\n        publicationDate: ''\n      },\n      titleValid: false,\n      authorValid: false,\n      genreValid: false,\n      paperbackValid: false,\n      publisherValid: false,\n      languageValid: false,\n      publicationDateValid: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInputTable,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"genre\",\n        placeholder: \"Genre\",\n        onChange: this.updateInput,\n        value: this.state.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"paperback\",\n        placeholder: \"Paperback\",\n        onChange: this.updateInput,\n        value: this.state.paperback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"publisher\",\n        placeholder: \"Publisher\",\n        onChange: this.updateInput,\n        value: this.state.publisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"language\",\n        placeholder: \"Language\",\n        onChange: this.updateInput,\n        value: this.state.language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"publicationDate\",\n        placeholder: \"Publication date (dd-mm-yyyy)\",\n        onChange: this.updateInput,\n        value: this.state.publicationDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(BasicButton, {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Listing, {\n        books: this.props.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Listing","AddBook","props","handleChange","e","target","files","image","setState","filename","name","url","updateInput","value","validateField","addToDb","preventDefault","state","storageRef","storage","ref","uploadImage","put","on","snapshot","error","console","log","author","flag","authors","map","id","db","firestore","collection","add","addedBy","auth","currentUser","uid","then","docRef","doc","title","genre","paperback","publisher","language","publicationDate","coverUrl","favedBy","window","location","reload","formErrors","titleValid","authorValid","genreValid","paperbackValid","publisherValid","languageValid","publicationDateValid","bind","addBook","updateInputTable","formValid","books"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Listing from './Listing';\n\nclass AddBook extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            author: '',\n            genre: '',\n            paperback: '',\n            publisher: '',\n            language: '',\n            publicationDate: '',\n            image: null,\n            filename: '',\n            url: '',\n            formErrors: {\n                title: '',\n                author: '',\n                genre: '',\n                paperback: '',\n                publisher: '',\n                language: '',\n                publicationDate: ''\n            },\n            titleValid: false,\n            authorValid: false,\n            genreValid: false,\n            paperbackValid: false,\n            publisherValid: false,\n            languageValid: false,\n            publicationDateValid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n            this.setState({ url: ('/image/' + image.name) });\n        }\n    }\n\n    updateInput = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(\n            {\n                [name]: value\n            },\n            () => {\n                this.validateField(name, value);\n            }\n        );\n    };\n\n\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n        }, function (error) {\n        }, function () {\n            console.log('Image added')\n        });\n\n        let author = this.state.author\n        var flag = null\n        this.props.authors.map(function (e) {\n            if (e.name == author) { flag = e.id }\n        })\n        var db = firebase.firestore().collection('Authors')\n        if (flag == null) {\n            db.add({\n                name: this.state.author,\n                addedBy: firebase.auth().currentUser.uid\n            }).then(docRef => {\n                console.log('Author added', docRef.id);\n                db.doc(docRef.id).collection('Books').add({\n                    title: this.state.title,\n                    genre: this.state.genre,\n                    paperback: this.state.paperback,\n                    publisher: this.state.publisher,\n                    language: this.state.language,\n                    publicationDate: this.state.publicationDate,\n                    coverUrl: this.state.url,\n                    favedBy: []\n                }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                    window.location.reload();\n                });\n            })\n        } else {\n            db.doc(flag).collection('Books').add({\n                title: this.state.title,\n                genre: this.state.genre,\n                paperback: this.state.paperback,\n                publisher: this.state.publisher,\n                language: this.state.language,\n                publicationDate: this.state.publicationDate,\n                coverUrl: this.state.url,\n                favedBy: []\n            }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                window.location.reload();\n            });\n        }\n\n\n    };\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div>\n                    <p>Add additional books:</p>\n                    <form onSubmit={this.addBook}>\n                        <BasicInput\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            onChange={this.updateInputTable}\n                            value={this.state.title}\n                        />\n                        <BasicInput\n                            type=\"text\"\n                            name=\"author\"\n                            placeholder=\"Author\"\n                            onChange={this.updateInput}\n                            value={this.state.author}\n                        />\n                        <BasicInput\n                            type=\"text\"\n                            name=\"genre\"\n                            placeholder=\"Genre\"\n                            onChange={this.updateInput}\n                            value={this.state.genre}\n                        />\n                        <BasicInput\n                            type=\"text\"\n                            name=\"paperback\"\n                            placeholder=\"Paperback\"\n                            onChange={this.updateInput}\n                            value={this.state.paperback}\n                        />\n                        <BasicInput\n                            type=\"text\"\n                            name=\"publisher\"\n                            placeholder=\"Publisher\"\n                            onChange={this.updateInput}\n                            value={this.state.publisher}\n                        />\n                        <BasicInput\n                            type=\"text\"\n                            name=\"language\"\n                            placeholder=\"Language\"\n                            onChange={this.updateInput}\n                            value={this.state.language}\n                        />\n                        <BasicInput\n                            type=\"text\"\n                            name=\"publicationDate\"\n                            placeholder=\"Publication date (dd-mm-yyyy)\"\n                            onChange={this.updateInput}\n                            value={this.state.publicationDate}\n                        />\n                        <input type=\"file\" onChange={this.handleChange} />\n                        <div>\n                            <BasicButton type=\"submit\" disabled={!this.state.formValid}>\n                                Submit\n          </BasicButton>\n                        </div>\n                    </form>\n                    <FormErrors formErrors={this.state.formErrors} />\n                </div>\n                <br />\n                <Listing books={this.props.books} />\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}