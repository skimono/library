{"ast":null,"code":"import _defineProperty from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook() {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n\n        _this.setState({\n          url: '/image/' + image.name\n        });\n      }\n    };\n\n    _this.updateInput = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.updateInputTable = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, [e.target.value]));\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        console.log('Image added');\n      });\n\n      if (!_this.props.books.name.includes(_this.state.name)) {\n        firebase.firestore().collection('Authors').add({\n          name: _this.state.author,\n          addedBy: firebase.auth().currentUser.uid\n        });\n      }\n    };\n\n    _this.state = {\n      title: [],\n      author: '',\n      image: null,\n      filename: '',\n      url: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"addAuthor\",\n    value: function addAuthor() {\n      firebase.firestore().collection('Authors').add({\n        name: this.state.author,\n        addedBy: firebase.auth().currentUser.uid\n      });\n    }\n  }, {\n    key: \"addBook\",\n    value: function addBook(docRef) {\n      firebase.firestore().collection('Authors').doc(docRef.id).collection('Books').add({\n        title: this.state.title,\n        coverUrl: this.state.url,\n        favedBy: []\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.setState({\n        title: [],\n        author: '',\n        image: null,\n        filename: '',\n        url: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInputTable,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Listing, {\n        books: this.props.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Listing","AddBook","handleChange","e","target","files","image","setState","filename","name","url","updateInput","value","updateInputTable","addToDb","preventDefault","state","storageRef","storage","ref","uploadImage","put","on","snapshot","error","console","log","props","books","includes","firestore","collection","add","author","addedBy","auth","currentUser","uid","title","bind","docRef","doc","id","coverUrl","favedBy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Listing from './Listing';\n\nclass AddBook extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            title: [],\n            author: '',\n            image: null,\n            filename: '',\n            url: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n            this.setState({ url: ('/image/' + image.name) });\n        }\n    }\n\n    updateInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    updateInputTable = e => {\n        this.setState({\n            [e.target.name]: [e.target.value]\n        });\n    }\n\n    addAuthor() {\n        firebase.firestore().collection('Authors').add({\n            name: this.state.author,\n            addedBy: firebase.auth().currentUser.uid,\n        })\n    }\n\n    addBook(docRef) {\n        firebase.firestore().collection('Authors').doc(docRef.id).collection('Books').add({\n            title: this.state.title,\n            coverUrl: this.state.url,\n            favedBy: []\n        })\n    }\n\n    clear() {\n        this.setState({\n            title: [],\n            author: '',\n            image: null,\n            filename: '',\n            url: ''\n        })\n    }\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n        }, function (error) {\n        }, function () {\n            console.log('Image added')\n        });\n\n        if (!this.props.books.name.includes(this.state.name)) {\n            firebase.firestore().collection('Authors').add({\n                name: this.state.author,\n                addedBy: firebase.auth().currentUser.uid,\n\n            })\n        }\n    };\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div>\n                    <p>Add additional books:</p>\n                    <form onSubmit={this.addToDb}>\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            onChange={this.updateInputTable}\n                            value={this.state.title}\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"author\"\n                            placeholder=\"Author\"\n                            onChange={this.updateInput}\n                            value={this.state.author}\n                        />\n                        <input type=\"file\"\n                            onChange={this.handleChange}\n                        />\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n                <br />\n                <Listing books={this.props.books} />\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}