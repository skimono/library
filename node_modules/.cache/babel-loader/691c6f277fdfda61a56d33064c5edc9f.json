{"ast":null,"code":"import _objectSpread from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/Listing.js\";\nimport React, { Component } from 'react';\nimport Books from './Books';\nimport firebase from 'firebase';\n\nvar Listing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Listing, _Component);\n\n  function Listing() {\n    var _this;\n\n    _classCallCheck(this, Listing);\n\n    _this.state = {\n      books: []\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Listing, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var db = firebase.firestore();\n      db.collection('Authors').onSnapshot(function (querySnapshot) {\n        var authors = [];\n        querySnapshot.forEach(function (doc) {\n          return authors.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          authors: authors\n        });\n\n        _this2.state.authors.forEach(function (author) {\n          return db.collection('Authors').doc(author.id).collection('Books').onSnapshot(function (querySnapshot) {\n            var books = [];\n            console.log('new author checked');\n            querySnapshot.forEach(function (doc) {\n              return books.push(_objectSpread({\n                id: doc.id,\n                authorid: author.id,\n                author: author.name\n              }, doc.data()));\n            });\n\n            _this2.setState({\n              books: books\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var books = this.state.books;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"List of known books:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, books.map(function (b) {\n        return React.createElement(Books, {\n          key: b.id,\n          book: b,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Listing;\n}(Component);\n\nexport default Listing;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/Listing.js"],"names":["React","Component","Books","firebase","Listing","state","books","db","firestore","collection","onSnapshot","querySnapshot","authors","forEach","doc","push","id","data","setState","author","console","log","authorid","name","map","b"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IAEMC,O;;;;;AAOF,qBAAc;AAAA;;AAAA;;AACV,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AADU;AAIb;;;;wCAEmB;AAAA;;AAChB,UAAIC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAT;AACAD,MAAAA,EAAE,CAACE,UAAH,CAAc,SAAd,EACKC,UADL,CACgB,UAAAC,aAAa,EAAI;AACzB,YAAMC,OAAO,GAAG,EAAhB;AACAD,QAAAA,aAAa,CAACE,OAAd,CAAsB,UAAAC,GAAG;AAAA,iBACrBF,OAAO,CAACG,IAAR;AAAeC,YAAAA,EAAE,EAAEF,GAAG,CAACE;AAAvB,aAA8BF,GAAG,CAACG,IAAJ,EAA9B,EADqB;AAAA,SAAzB;;AAGA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAEA;AAAX,SAAd;;AAEA,QAAA,MAAI,CAACP,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,UAAAM,MAAM;AAAA,iBAC7BZ,EAAE,CAACE,UAAH,CAAc,SAAd,EAAyBK,GAAzB,CAA6BK,MAAM,CAACH,EAApC,EAAwCP,UAAxC,CAAmD,OAAnD,EACKC,UADL,CACgB,UAAAC,aAAa,EAAI;AACzB,gBAAIL,KAAK,GAAG,EAAZ;AACAc,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEAV,YAAAA,aAAa,CAACE,OAAd,CAAsB,UAAAC,GAAG;AAAA,qBACrBR,KAAK,CAACS,IAAN;AACIC,gBAAAA,EAAE,EAAEF,GAAG,CAACE,EADZ;AAEIM,gBAAAA,QAAQ,EAAEH,MAAM,CAACH,EAFrB;AAGIG,gBAAAA,MAAM,EAAEA,MAAM,CAACI;AAHnB,iBAIOT,GAAG,CAACG,IAAJ,EAJP,EADqB;AAAA,aAAzB;;AAQA,YAAA,MAAI,CAACC,QAAL,CAAc;AAAEZ,cAAAA,KAAK,EAAEA;AAAT,aAAd;AACH,WAdL,CAD6B;AAAA,SAAjC;AAiBH,OAzBL;AA6BH;;;6BAGQ;AAAA,UACGA,KADH,GACa,KAAKD,KADlB,CACGC,KADH;AAGL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KAAK,CAACkB,GAAN,CAAU,UAAAC,CAAC;AAAA,eACR,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,CAAC,CAACT,EAAd;AAAkB,UAAA,IAAI,EAAES,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ;AAAA,OAAX,CADL,CAFJ,CADJ;AAUH;;;;EA5DiBxB,S;;AA8DtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport Books from './Books'\nimport firebase from 'firebase'\n\nclass Listing extends Component {\n\n    state = {\n        authors: [],\n        books: []\n    }\n\n    constructor() {\n        this.state = {\n            books: []\n          }\n    }\n\n    componentDidMount() {\n        var db = firebase.firestore()\n        db.collection('Authors')\n            .onSnapshot(querySnapshot => {\n                const authors = []\n                querySnapshot.forEach(doc =>\n                    authors.push({ id: doc.id, ...doc.data() })\n                )\n                this.setState({ authors: authors })\n                \n                this.state.authors.forEach(author =>\n                    db.collection('Authors').doc(author.id).collection('Books')\n                        .onSnapshot(querySnapshot => {\n                            var books = []\n                            console.log('new author checked')\n                            \n                            querySnapshot.forEach(doc =>\n                                books.push({\n                                    id: doc.id,\n                                    authorid: author.id,\n                                    author: author.name,\n                                    ...doc.data()\n                                })\n                            )\n                            this.setState({ books: books })\n                        })\n                )\n            })\n\n\n\n    }\n\n\n    render() {\n        const { books } = this.state\n\n        return (\n            <div>\n                <p>List of known books:</p>\n                <ul>\n                    {books.map(b =>\n                        <Books key={b.id} book={b} />\n                    )}\n                </ul>\n            </div>\n        )\n    }\n}\nexport default Listing;"]},"metadata":{},"sourceType":"module"}