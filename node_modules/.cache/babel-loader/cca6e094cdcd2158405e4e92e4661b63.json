{"ast":null,"code":"import _objectSpread from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/wojciechosinski/Dokumenty/ARC/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/wojciechosinski/Dokumenty/ARC/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\nimport CreateNotification from './CreateNotification';\nimport DisplayNotification from './DisplayNotification';\nimport NotificationService from './NotificationService';\nvar notificationService = new NotificationService();\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        var currentdate = new Date();\n        var currenttime = currentdate.getDate() + '-' + (currentdate.getMonth() + 1) + '-' + currentdate.getFullYear() + '_' + currentdate.getHours() + ':' + currentdate.getMinutes() + ':' + currentdate.getSeconds() + '_' + firebase.auth().currentUser.uid;\n\n        var filenametemp = _this.state.filename.split('.');\n\n        var roz = filenametemp.pop();\n\n        _this.setState({\n          filename: currenttime + roz\n        });\n\n        console.log(_this.state.filename);\n      }\n    };\n\n    _this.updateInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var url = null;\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        uploadImage.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          url = downloadURL;\n          console.log('Cover Added', url);\n        });\n      });\n      var author = _this.state.author;\n      var flag = null;\n\n      _this.state.authors.map(function (e) {\n        if (e.name == author) {\n          flag = e.id;\n          console.log('author id from flag', flag);\n        }\n      });\n\n      setTimeout(function () {\n        var db = firebase.firestore().collection('Authors');\n\n        if (flag == null) {\n          db.add({\n            name: _this.state.author,\n            addedBy: firebase.auth().currentUser.uid\n          }).then(function (docRef) {\n            _this.addBook(db, docRef, url);\n          });\n        } else {\n          _this.addBook(db, flag, url);\n        }\n      }, 3000);\n    };\n\n    _this.state = {\n      authorid: ' ',\n      bookid: ' ',\n      authors: [],\n      books: [],\n      title: '',\n      author: '',\n      genre: '',\n      pages: '',\n      publisher: '',\n      language: '',\n      image: null,\n      filename: '',\n      formErrors: {\n        title: '',\n        author: '',\n        genre: '',\n        pages: '',\n        publisher: '',\n        language: ''\n      },\n      titleValid: false,\n      authorValid: false,\n      genreValid: false,\n      pagesValid: false,\n      publisherValid: false,\n      languageValid: false\n    };\n    _this.addToDb = _this.addToDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var settings = {\n        timestampsInSnapshots: true\n      };\n      firebase.firestore().settings(settings);\n      var db = firebase.firestore();\n      db.collection('Authors').onSnapshot(function (querySnapshot) {\n        var authors = [];\n        querySnapshot.forEach(function (doc) {\n          return authors.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          authors: authors\n        });\n\n        var books = [];\n\n        _this2.state.authors.forEach(function (author) {\n          return db.collection('Authors').doc(author.id).collection('Books').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              return books.push(_objectSpread({\n                id: doc.id,\n                authorid: author.id,\n                author: author.name\n              }, doc.data()));\n            });\n\n            _this2.setState({\n              books: books\n            });\n          });\n        });\n      });\n      console.log('Got Books');\n    }\n  }, {\n    key: \"addBook\",\n    value: function addBook(db, docAdr, url) {\n      console.log('Author added', docAdr);\n      db.doc(docAdr).collection('Books').add({\n        title: this.state.title,\n        genre: this.state.genre,\n        pages: this.state.pages,\n        publisher: this.state.publisher,\n        language: this.state.language,\n        coverUrl: url,\n        favedBy: []\n      }).then(function (docRef) {\n        return console.log('Book added', docRef.id);\n      }).then(function () {\n        window.location.reload();\n      });\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(url) {\n      var bookRef = firebase.firestore().collection('Authors').doc(this.state.authorid).collection('Books').doc(this.state.bookid);\n      var filename = this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        uploadImage.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          url = downloadURL;\n          bookRef.update({\n            coverUrl: url\n          }).then(function () {\n            return React.createElement(CreateNotification, {\n              notificationService: notificationService,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var titleValid = this.state.titleValid;\n      var authorValid = this.state.authorValid;\n      var genreValid = this.state.genreValid;\n      var pagesValid = this.state.pagesValid;\n      var publisherValid = this.state.publisherValid;\n      var languageValid = this.state.languageValid;\n\n      switch (fieldName) {\n        case 'title':\n          titleValid = value.length >= 1;\n          fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n          break;\n\n        case 'author':\n          authorValid = value.length >= 1;\n          fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n          break;\n\n        case 'genre':\n          genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n\n          fieldValidationErrors.Genre = genreValid ? '' : ' is too short or contains number';\n          break;\n\n        case 'pages':\n          pagesValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n          fieldValidationErrors.Pages = pagesValid ? '' : ' must contain number';\n          break;\n\n        case 'publisher':\n          publisherValid = value.length >= 3;\n          fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n          break;\n\n        case 'language':\n          languageValid = value.length >= 2; //PL\n\n          fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        titleValid: titleValid,\n        authorValid: authorValid,\n        genreValid: genreValid,\n        pagesValid: pagesValid,\n        publisherValid: publisherValid,\n        languageValid: languageValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.titleValid && this.state.authorValid && this.state.genreValid && this.state.pagesValid && this.state.publisherValid && this.state.languageValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(SubHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInput,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"genre\",\n        placeholder: \"Genre\",\n        onChange: this.updateInput,\n        value: this.state.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"pages\",\n        placeholder: \"Pages\",\n        onChange: this.updateInput,\n        value: this.state.pages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"publisher\",\n        placeholder: \"Publisher\",\n        onChange: this.updateInput,\n        value: this.state.publisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"language\",\n        placeholder: \"Language\",\n        onChange: this.updateInput,\n        value: this.state.language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(BasicButton, {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      })), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Listing, {\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(DisplayNotification, {\n        notificationService: notificationService,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/wojciechosinski/Dokumenty/ARC/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Listing","FormErrors","BasicButton","BasicInput","SubHeader","Body","CreateNotification","DisplayNotification","NotificationService","notificationService","AddBook","props","handleChange","e","target","files","image","setState","currentdate","Date","currenttime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","auth","currentUser","uid","filenametemp","state","filename","split","roz","pop","console","log","updateInput","name","value","validateField","addToDb","preventDefault","url","storageRef","storage","ref","uploadImage","put","on","snapshot","error","getDownloadURL","then","downloadURL","author","flag","authors","map","id","setTimeout","db","firestore","collection","add","addedBy","docRef","addBook","authorid","bookid","books","title","genre","pages","publisher","language","formErrors","titleValid","authorValid","genreValid","pagesValid","publisherValid","languageValid","bind","settings","timestampsInSnapshots","onSnapshot","querySnapshot","forEach","doc","push","data","get","docAdr","coverUrl","favedBy","window","location","reload","bookRef","update","fieldName","fieldValidationErrors","length","Title","Author","match","Genre","Pages","Publisher","Language","validateForm","formValid"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,IAA7C,QAAyD,cAAzD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,IAAIC,mBAAmB,GAAG,IAAID,mBAAJ,EAA1B;;IAEME,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAkCnBC,YAlCmB,GAkCJ,UAAAC,CAAC,EAAI;AAClB,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrB,YAAMC,KAAK,GAAGH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;;AACA,cAAKE,QAAL,CAAc;AAAA,iBAAO;AAAED,YAAAA,KAAK,EAALA;AAAF,WAAP;AAAA,SAAd;;AAEA,YAAIE,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,YAAIC,WAAW,GACbF,WAAW,CAACG,OAAZ,KACA,GADA,IAECH,WAAW,CAACI,QAAZ,KAAyB,CAF1B,IAGA,GAHA,GAIAJ,WAAW,CAACK,WAAZ,EAJA,GAKA,GALA,GAMAL,WAAW,CAACM,QAAZ,EANA,GAOA,GAPA,GAQAN,WAAW,CAACO,UAAZ,EARA,GASA,GATA,GAUAP,WAAW,CAACQ,UAAZ,EAVA,GAWA,GAXA,GAYA3B,QAAQ,CAAC4B,IAAT,GAAgBC,WAAhB,CAA4BC,GAb9B;;AAcA,YAAIC,YAAY,GAAG,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0B,GAA1B,CAAnB;;AACA,YAAIC,GAAG,GAAGJ,YAAY,CAACK,GAAb,EAAV;;AACA,cAAKlB,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAEZ,WAAW,GAAGc;AAA1B,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWC,QAAvB;AACD;AACF,KA3DkB;;AAAA,UA6DnBM,WA7DmB,GA6DL,UAAAzB,CAAC,EAAI;AACjB,UAAM0B,IAAI,GAAG1B,CAAC,CAACC,MAAF,CAASyB,IAAtB;AACA,UAAMC,KAAK,GAAG3B,CAAC,CAACC,MAAF,CAAS0B,KAAvB;;AACA,YAAKvB,QAAL,qBAEKsB,IAFL,EAEYC,KAFZ,GAIE,YAAM;AACJ,cAAKC,aAAL,CAAmBF,IAAnB,EAAyBC,KAAzB;AACD,OANH;AAQD,KAxEkB;;AAAA,UA6JnBE,OA7JmB,GA6JT,UAAA7B,CAAC,EAAI;AACbA,MAAAA,CAAC,CAAC8B,cAAF;AAEA,UAAIC,GAAG,GAAG,IAAV;AAHa,UAILZ,QAJK,GAIQ,MAAKD,KAJb,CAILC,QAJK;AAKb,UAAIa,UAAU,GAAG9C,QAAQ,CAAC+C,OAAT,GAAmBC,GAAnB,CAAuB,aAAaf,QAApC,CAAjB;AACA,UAAIgB,WAAW,GAAGH,UAAU,CAACI,GAAX,CAAe,MAAKlB,KAAL,CAAWf,KAA1B,CAAlB;AAEAgC,MAAAA,WAAW,CAACE,EAAZ,CACE,eADF,EAEE,UAASC,QAAT,EAAmB,CAAE,CAFvB,EAGE,UAASC,KAAT,EAAgB,CAAE,CAHpB,EAIE,YAAW;AACTJ,QAAAA,WAAW,CAACG,QAAZ,CAAqBJ,GAArB,CAAyBM,cAAzB,GAA0CC,IAA1C,CAA+C,UAAAC,WAAW,EAAI;AAC5DX,UAAAA,GAAG,GAAGW,WAAN;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BO,GAA3B;AACD,SAHD;AAID,OATH;AAYA,UAAIY,MAAM,GAAG,MAAKzB,KAAL,CAAWyB,MAAxB;AACA,UAAIC,IAAI,GAAG,IAAX;;AACA,YAAK1B,KAAL,CAAW2B,OAAX,CAAmBC,GAAnB,CAAuB,UAAS9C,CAAT,EAAY;AACjC,YAAIA,CAAC,CAAC0B,IAAF,IAAUiB,MAAd,EAAsB;AACpBC,UAAAA,IAAI,GAAG5C,CAAC,CAAC+C,EAAT;AACAxB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCoB,IAAnC;AACD;AACF,OALD;;AAOAI,MAAAA,UAAU,CAAC,YAAM;AACf,YAAIC,EAAE,GAAG/D,QAAQ,CAACgE,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,CAAT;;AACA,YAAIP,IAAI,IAAI,IAAZ,EAAkB;AAChBK,UAAAA,EAAE,CAACG,GAAH,CAAO;AACL1B,YAAAA,IAAI,EAAE,MAAKR,KAAL,CAAWyB,MADZ;AAELU,YAAAA,OAAO,EAAEnE,QAAQ,CAAC4B,IAAT,GAAgBC,WAAhB,CAA4BC;AAFhC,WAAP,EAGGyB,IAHH,CAGQ,UAAAa,MAAM,EAAI;AAChB,kBAAKC,OAAL,CAAaN,EAAb,EAAiBK,MAAjB,EAAyBvB,GAAzB;AACD,WALD;AAMD,SAPD,MAOO;AACL,gBAAKwB,OAAL,CAAaN,EAAb,EAAiBL,IAAjB,EAAuBb,GAAvB;AACD;AACF,OAZS,EAYP,IAZO,CAAV;AAaD,KAvMkB;;AAEjB,UAAKb,KAAL,GAAa;AACXsC,MAAAA,QAAQ,EAAE,GADC;AAEXC,MAAAA,MAAM,EAAE,GAFG;AAGXZ,MAAAA,OAAO,EAAE,EAHE;AAIXa,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXhB,MAAAA,MAAM,EAAE,EANG;AAOXiB,MAAAA,KAAK,EAAE,EAPI;AAQXC,MAAAA,KAAK,EAAE,EARI;AASXC,MAAAA,SAAS,EAAE,EATA;AAUXC,MAAAA,QAAQ,EAAE,EAVC;AAWX5D,MAAAA,KAAK,EAAE,IAXI;AAYXgB,MAAAA,QAAQ,EAAE,EAZC;AAaX6C,MAAAA,UAAU,EAAE;AACVL,QAAAA,KAAK,EAAE,EADG;AAEVhB,QAAAA,MAAM,EAAE,EAFE;AAGViB,QAAAA,KAAK,EAAE,EAHG;AAIVC,QAAAA,KAAK,EAAE,EAJG;AAKVC,QAAAA,SAAS,EAAE,EALD;AAMVC,QAAAA,QAAQ,EAAE;AANA,OAbD;AAqBXE,MAAAA,UAAU,EAAE,KArBD;AAsBXC,MAAAA,WAAW,EAAE,KAtBF;AAuBXC,MAAAA,UAAU,EAAE,KAvBD;AAwBXC,MAAAA,UAAU,EAAE,KAxBD;AAyBXC,MAAAA,cAAc,EAAE,KAzBL;AA0BXC,MAAAA,aAAa,EAAE;AA1BJ,KAAb;AA4BA,UAAKzC,OAAL,GAAe,MAAKA,OAAL,CAAa0C,IAAb,uDAAf;AACA,UAAKxE,YAAL,GAAoB,MAAKA,YAAL,CAAkBwE,IAAlB,uDAApB;AA/BiB;AAgClB;;;;wCA0CmB;AAAA;;AAClB,UAAMC,QAAQ,GAAG;AAAEC,QAAAA,qBAAqB,EAAE;AAAzB,OAAjB;AACAvF,MAAAA,QAAQ,CAACgE,SAAT,GAAqBsB,QAArB,CAA8BA,QAA9B;AAEA,UAAIvB,EAAE,GAAG/D,QAAQ,CAACgE,SAAT,EAAT;AACAD,MAAAA,EAAE,CAACE,UAAH,CAAc,SAAd,EAAyBuB,UAAzB,CAAoC,UAAAC,aAAa,EAAI;AACnD,YAAM9B,OAAO,GAAG,EAAhB;AACA8B,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG;AAAA,iBAAIhC,OAAO,CAACiC,IAAR;AAAe/B,YAAAA,EAAE,EAAE8B,GAAG,CAAC9B;AAAvB,aAA8B8B,GAAG,CAACE,IAAJ,EAA9B,EAAJ;AAAA,SAAzB;;AACA,QAAA,MAAI,CAAC3E,QAAL,CAAc;AAAEyC,UAAAA,OAAO,EAAEA;AAAX,SAAd;;AACA,YAAMa,KAAK,GAAG,EAAd;;AACA,QAAA,MAAI,CAACxC,KAAL,CAAW2B,OAAX,CAAmB+B,OAAnB,CAA2B,UAAAjC,MAAM;AAAA,iBAC/BM,EAAE,CACCE,UADH,CACc,SADd,EAEG0B,GAFH,CAEOlC,MAAM,CAACI,EAFd,EAGGI,UAHH,CAGc,OAHd,EAIG6B,GAJH,GAKGvC,IALH,CAKQ,UAAAkC,aAAa,EAAI;AACrBA,YAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG;AAAA,qBACvBnB,KAAK,CAACoB,IAAN;AACE/B,gBAAAA,EAAE,EAAE8B,GAAG,CAAC9B,EADV;AAEES,gBAAAA,QAAQ,EAAEb,MAAM,CAACI,EAFnB;AAGEJ,gBAAAA,MAAM,EAAEA,MAAM,CAACjB;AAHjB,iBAIKmD,GAAG,CAACE,IAAJ,EAJL,EADuB;AAAA,aAAzB;;AAQA,YAAA,MAAI,CAAC3E,QAAL,CAAc;AAAEsD,cAAAA,KAAK,EAAEA;AAAT,aAAd;AACD,WAfH,CAD+B;AAAA,SAAjC;AAkBD,OAvBD;AAwBAnC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;;4BAEOyB,E,EAAIgC,M,EAAQlD,G,EAAK;AACvBR,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4ByD,MAA5B;AACAhC,MAAAA,EAAE,CAAC4B,GAAH,CAAOI,MAAP,EACG9B,UADH,CACc,OADd,EAEGC,GAFH,CAEO;AACHO,QAAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWyC,KADf;AAEHC,QAAAA,KAAK,EAAE,KAAK1C,KAAL,CAAW0C,KAFf;AAGHC,QAAAA,KAAK,EAAE,KAAK3C,KAAL,CAAW2C,KAHf;AAIHC,QAAAA,SAAS,EAAE,KAAK5C,KAAL,CAAW4C,SAJnB;AAKHC,QAAAA,QAAQ,EAAE,KAAK7C,KAAL,CAAW6C,QALlB;AAMHmB,QAAAA,QAAQ,EAAEnD,GANP;AAOHoD,QAAAA,OAAO,EAAE;AAPN,OAFP,EAWG1C,IAXH,CAWQ,UAAAa,MAAM;AAAA,eAAI/B,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B8B,MAAM,CAACP,EAAjC,CAAJ;AAAA,OAXd,EAYGN,IAZH,CAYQ,YAAM;AACV2C,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAdH;AAeD;;;6BAEQvD,G,EAAK;AACZ,UAAIwD,OAAO,GAAGrG,QAAQ,CACnBgE,SADW,GAEXC,UAFW,CAEA,SAFA,EAGX0B,GAHW,CAGP,KAAK3D,KAAL,CAAWsC,QAHJ,EAIXL,UAJW,CAIA,OAJA,EAKX0B,GALW,CAKP,KAAK3D,KAAL,CAAWuC,MALJ,CAAd;AADY,UAQJtC,QARI,GAQS,KAAKD,KARd,CAQJC,QARI;AAUZ,UAAIa,UAAU,GAAG9C,QAAQ,CAAC+C,OAAT,GAAmBC,GAAnB,CAAuB,aAAaf,QAApC,CAAjB;AACA,UAAIgB,WAAW,GAAGH,UAAU,CAACI,GAAX,CAAe,KAAKlB,KAAL,CAAWf,KAA1B,CAAlB;AAEAgC,MAAAA,WAAW,CAACE,EAAZ,CACE,eADF,EAEE,UAASC,QAAT,EAAmB,CAAE,CAFvB,EAGE,UAASC,KAAT,EAAgB,CAAE,CAHpB,EAIE,YAAW;AACTJ,QAAAA,WAAW,CAACG,QAAZ,CAAqBJ,GAArB,CAAyBM,cAAzB,GAA0CC,IAA1C,CAA+C,UAAAC,WAAW,EAAI;AAC5DX,UAAAA,GAAG,GAAGW,WAAN;AACA6C,UAAAA,OAAO,CACJC,MADH,CACU;AACNN,YAAAA,QAAQ,EAAEnD;AADJ,WADV,EAIGU,IAJH,CAIQ;AAAA,mBACJ,oBAAC,kBAAD;AAAoB,cAAA,mBAAmB,EAAE7C,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI;AAAA,WAJR;AAOD,SATD;AAUD,OAfH;AAiBD;;;kCA8Ca6F,S,EAAW9D,K,EAAO;AAC9B,UAAI+D,qBAAqB,GAAG,KAAKxE,KAAL,CAAW8C,UAAvC;AACA,UAAIC,UAAU,GAAG,KAAK/C,KAAL,CAAW+C,UAA5B;AACA,UAAIC,WAAW,GAAG,KAAKhD,KAAL,CAAWgD,WAA7B;AACA,UAAIC,UAAU,GAAG,KAAKjD,KAAL,CAAWiD,UAA5B;AACA,UAAIC,UAAU,GAAG,KAAKlD,KAAL,CAAWkD,UAA5B;AACA,UAAIC,cAAc,GAAG,KAAKnD,KAAL,CAAWmD,cAAhC;AACA,UAAIC,aAAa,GAAG,KAAKpD,KAAL,CAAWoD,aAA/B;;AAEA,cAAQmB,SAAR;AACE,aAAK,OAAL;AACExB,UAAAA,UAAU,GAAGtC,KAAK,CAACgE,MAAN,IAAgB,CAA7B;AACAD,UAAAA,qBAAqB,CAACE,KAAtB,GAA8B3B,UAAU,GAAG,EAAH,GAAQ,aAAhD;AACA;;AACF,aAAK,QAAL;AACEC,UAAAA,WAAW,GAAGvC,KAAK,CAACgE,MAAN,IAAgB,CAA9B;AACAD,UAAAA,qBAAqB,CAACG,MAAtB,GAA+B3B,WAAW,GAAG,EAAH,GAAQ,aAAlD;AACA;;AACF,aAAK,OAAL;AACEC,UAAAA,UAAU,GAAGxC,KAAK,CAACgE,MAAN,IAAgB,CAAhB,IAAqB,CAAChE,KAAK,CAACmE,KAAN,CAAY,QAAZ,CAAnC,CADF,CAC4D;;AAC1DJ,UAAAA,qBAAqB,CAACK,KAAtB,GAA8B5B,UAAU,GACpC,EADoC,GAEpC,kCAFJ;AAGA;;AACF,aAAK,OAAL;AACEC,UAAAA,UAAU,GAAGzC,KAAK,CAACmE,KAAN,CAAY,UAAZ,KAA2B,CAACnE,KAAK,CAACmE,KAAN,CAAY,OAAZ,CAAzC;AACAJ,UAAAA,qBAAqB,CAACM,KAAtB,GAA8B5B,UAAU,GAAG,EAAH,GAAQ,sBAAhD;AACA;;AACF,aAAK,WAAL;AACEC,UAAAA,cAAc,GAAG1C,KAAK,CAACgE,MAAN,IAAgB,CAAjC;AACAD,UAAAA,qBAAqB,CAACO,SAAtB,GAAkC5B,cAAc,GAAG,EAAH,GAAQ,eAAxD;AACA;;AACF,aAAK,UAAL;AACEC,UAAAA,aAAa,GAAG3C,KAAK,CAACgE,MAAN,IAAgB,CAAhC,CADF,CACqC;;AACnCD,UAAAA,qBAAqB,CAACQ,QAAtB,GAAiC5B,aAAa,GAAG,EAAH,GAAQ,eAAtD;AACA;;AACF;AACE;AA5BJ;;AA8BA,WAAKlE,QAAL,CACE;AACE4D,QAAAA,UAAU,EAAE0B,qBADd;AAEEzB,QAAAA,UAAU,EAAVA,UAFF;AAGEC,QAAAA,WAAW,EAAXA,WAHF;AAIEC,QAAAA,UAAU,EAAVA,UAJF;AAKEC,QAAAA,UAAU,EAAVA,UALF;AAMEC,QAAAA,cAAc,EAAdA,cANF;AAOEC,QAAAA,aAAa,EAAbA;AAPF,OADF,EAUE,KAAK6B,YAVP;AAYD;;;mCAEc;AACb,WAAK/F,QAAL,CAAc;AACZgG,QAAAA,SAAS,EACP,KAAKlF,KAAL,CAAW+C,UAAX,IACA,KAAK/C,KAAL,CAAWgD,WADX,IAEA,KAAKhD,KAAL,CAAWiD,UAFX,IAGA,KAAKjD,KAAL,CAAWkD,UAHX,IAIA,KAAKlD,KAAL,CAAWmD,cAJX,IAKA,KAAKnD,KAAL,CAAWoD;AAPD,OAAd;AASD;;;6BAEQ;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKzC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,QAAQ,EAAE,KAAKJ,WAJjB;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWyC,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,WAAW,EAAC,QAHd;AAIE,QAAA,QAAQ,EAAE,KAAKlC,WAJjB;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWyB,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,QAAQ,EAAE,KAAKlB,WAJjB;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAW0C,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAsBE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,QAAQ,EAAE,KAAKnC,WAJjB;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAW2C,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,EA6BE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,QAAQ,EAAE,KAAKpC,WAJjB;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAW4C,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,EAoCE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,QAAQ,EAAE,KAAKrC,WAJjB;AAKE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAW6C,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApCF,EA2CE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKhE,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CF,EA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,QAAQ,EAAE,CAAC,KAAKmB,KAAL,CAAWkF,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CA5CF,CAFF,EAoDE,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKlF,KAAL,CAAW8C,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApDF,CADF,EAuDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvDF,EAwDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxDF,CADF,EA2DE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWwC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,mBAAD;AAAqB,QAAA,mBAAmB,EAAE9D,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CA3DF,CADF;AAmED;;;;EA/UmBX,S;;AAiVtB,eAAeY,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\nimport CreateNotification from './CreateNotification';\nimport DisplayNotification from './DisplayNotification';\nimport NotificationService from './NotificationService';\n\nlet notificationService = new NotificationService();\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authorid: ' ',\n      bookid: ' ',\n      authors: [],\n      books: [],\n      title: '',\n      author: '',\n      genre: '',\n      pages: '',\n      publisher: '',\n      language: '',\n      image: null,\n      filename: '',\n      formErrors: {\n        title: '',\n        author: '',\n        genre: '',\n        pages: '',\n        publisher: '',\n        language: ''\n      },\n      titleValid: false,\n      authorValid: false,\n      genreValid: false,\n      pagesValid: false,\n      publisherValid: false,\n      languageValid: false\n    };\n    this.addToDb = this.addToDb.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n\n      var currentdate = new Date();\n      var currenttime =\n        currentdate.getDate() +\n        '-' +\n        (currentdate.getMonth() + 1) +\n        '-' +\n        currentdate.getFullYear() +\n        '_' +\n        currentdate.getHours() +\n        ':' +\n        currentdate.getMinutes() +\n        ':' +\n        currentdate.getSeconds() +\n        '_' +\n        firebase.auth().currentUser.uid;\n      var filenametemp = this.state.filename.split('.');\n      var roz = filenametemp.pop();\n      this.setState({ filename: currenttime + roz });\n      console.log(this.state.filename);\n    }\n  };\n\n  updateInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        this.validateField(name, value);\n      }\n    );\n  };\n\n  componentDidMount() {\n    const settings = { timestampsInSnapshots: true };\n    firebase.firestore().settings(settings);\n\n    var db = firebase.firestore();\n    db.collection('Authors').onSnapshot(querySnapshot => {\n      const authors = [];\n      querySnapshot.forEach(doc => authors.push({ id: doc.id, ...doc.data() }));\n      this.setState({ authors: authors });\n      const books = [];\n      this.state.authors.forEach(author =>\n        db\n          .collection('Authors')\n          .doc(author.id)\n          .collection('Books')\n          .get()\n          .then(querySnapshot => {\n            querySnapshot.forEach(doc =>\n              books.push({\n                id: doc.id,\n                authorid: author.id,\n                author: author.name,\n                ...doc.data()\n              })\n            );\n            this.setState({ books: books });\n          })\n      );\n    });\n    console.log('Got Books');\n  }\n\n  addBook(db, docAdr, url) {\n    console.log('Author added', docAdr);\n    db.doc(docAdr)\n      .collection('Books')\n      .add({\n        title: this.state.title,\n        genre: this.state.genre,\n        pages: this.state.pages,\n        publisher: this.state.publisher,\n        language: this.state.language,\n        coverUrl: url,\n        favedBy: []\n      })\n      .then(docRef => console.log('Book added', docRef.id))\n      .then(() => {\n        window.location.reload();\n      });\n  }\n\n  addImage(url) {\n    var bookRef = firebase\n      .firestore()\n      .collection('Authors')\n      .doc(this.state.authorid)\n      .collection('Books')\n      .doc(this.state.bookid);\n\n    const { filename } = this.state;\n\n    var storageRef = firebase.storage().ref('/images/' + filename);\n    var uploadImage = storageRef.put(this.state.image);\n\n    uploadImage.on(\n      'state_changed',\n      function(snapshot) {},\n      function(error) {},\n      function() {\n        uploadImage.snapshot.ref.getDownloadURL().then(downloadURL => {\n          url = downloadURL;\n          bookRef\n            .update({\n              coverUrl: url\n            })\n            .then(() => (\n              <CreateNotification notificationService={notificationService} />\n            ));\n        });\n      }\n    );\n  }\n\n  addToDb = e => {\n    e.preventDefault();\n\n    var url = null;\n    const { filename } = this.state;\n    var storageRef = firebase.storage().ref('/images/' + filename);\n    var uploadImage = storageRef.put(this.state.image);\n\n    uploadImage.on(\n      'state_changed',\n      function(snapshot) {},\n      function(error) {},\n      function() {\n        uploadImage.snapshot.ref.getDownloadURL().then(downloadURL => {\n          url = downloadURL;\n          console.log('Cover Added', url);\n        });\n      }\n    );\n\n    let author = this.state.author;\n    var flag = null;\n    this.state.authors.map(function(e) {\n      if (e.name == author) {\n        flag = e.id;\n        console.log('author id from flag', flag);\n      }\n    });\n\n    setTimeout(() => {\n      var db = firebase.firestore().collection('Authors');\n      if (flag == null) {\n        db.add({\n          name: this.state.author,\n          addedBy: firebase.auth().currentUser.uid\n        }).then(docRef => {\n          this.addBook(db, docRef, url);\n        });\n      } else {\n        this.addBook(db, flag, url);\n      }\n    }, 3000);\n  };\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let titleValid = this.state.titleValid;\n    let authorValid = this.state.authorValid;\n    let genreValid = this.state.genreValid;\n    let pagesValid = this.state.pagesValid;\n    let publisherValid = this.state.publisherValid;\n    let languageValid = this.state.languageValid;\n\n    switch (fieldName) {\n      case 'title':\n        titleValid = value.length >= 1;\n        fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n        break;\n      case 'author':\n        authorValid = value.length >= 1;\n        fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n        break;\n      case 'genre':\n        genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n        fieldValidationErrors.Genre = genreValid\n          ? ''\n          : ' is too short or contains number';\n        break;\n      case 'pages':\n        pagesValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n        fieldValidationErrors.Pages = pagesValid ? '' : ' must contain number';\n        break;\n      case 'publisher':\n        publisherValid = value.length >= 3;\n        fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n        break;\n      case 'language':\n        languageValid = value.length >= 2; //PL\n        fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n        break;\n      default:\n        break;\n    }\n    this.setState(\n      {\n        formErrors: fieldValidationErrors,\n        titleValid,\n        authorValid,\n        genreValid,\n        pagesValid,\n        publisherValid,\n        languageValid\n      },\n      this.validateForm\n    );\n  }\n\n  validateForm() {\n    this.setState({\n      formValid:\n        this.state.titleValid &&\n        this.state.authorValid &&\n        this.state.genreValid &&\n        this.state.pagesValid &&\n        this.state.publisherValid &&\n        this.state.languageValid\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SubHeader>\n          <div>\n            <p>Add additional books:</p>\n            <form onSubmit={this.addToDb}>\n              <BasicInput\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                onChange={this.updateInput}\n                value={this.state.title}\n              />\n              <BasicInput\n                type=\"text\"\n                name=\"author\"\n                placeholder=\"Author\"\n                onChange={this.updateInput}\n                value={this.state.author}\n              />\n              <BasicInput\n                type=\"text\"\n                name=\"genre\"\n                placeholder=\"Genre\"\n                onChange={this.updateInput}\n                value={this.state.genre}\n              />\n              <BasicInput\n                type=\"text\"\n                name=\"pages\"\n                placeholder=\"Pages\"\n                onChange={this.updateInput}\n                value={this.state.pages}\n              />\n              <BasicInput\n                type=\"text\"\n                name=\"publisher\"\n                placeholder=\"Publisher\"\n                onChange={this.updateInput}\n                value={this.state.publisher}\n              />\n              <BasicInput\n                type=\"text\"\n                name=\"language\"\n                placeholder=\"Language\"\n                onChange={this.updateInput}\n                value={this.state.language}\n              />\n              <input type=\"file\" onChange={this.handleChange} />\n              <div>\n                <BasicButton type=\"submit\" disabled={!this.state.formValid}>\n                  Submit\n                </BasicButton>\n              </div>\n            </form>\n            <FormErrors formErrors={this.state.formErrors} />\n          </div>\n          <br />\n          <br />\n        </SubHeader>\n        <Body>\n          <Listing books={this.state.books} />\n\n          <DisplayNotification notificationService={notificationService} />\n        </Body>\n      </React.Fragment>\n    );\n  }\n}\nexport default AddBook;\n"]},"metadata":{},"sourceType":"module"}