{"ast":null,"code":"import _objectSpread from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n      }\n    };\n\n    _this.updateInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        var downloadURL = uploadImage.snapshot.ref.getDownloadURL();\n        this.setState({\n          url: downloadURL\n        });\n      });\n      var author = _this.state.author;\n      var flag = null;\n\n      _this.state.authors.map(function (e) {\n        if (e.name == author) {\n          flag = e.id;\n        }\n      });\n\n      var db = firebase.firestore().collection('Authors');\n\n      if (flag == null) {\n        db.add({\n          name: _this.state.author,\n          addedBy: firebase.auth().currentUser.uid\n        }).then(function (docRef) {\n          console.log('Author added', docRef.id);\n          db.doc(docRef.id).collection('Books').add({\n            title: _this.state.title,\n            genre: _this.state.genre,\n            paperback: _this.state.paperback,\n            publisher: _this.state.publisher,\n            language: _this.state.language,\n            publicationDate: _this.state.publicationDate,\n            coverUrl: _this.state.url,\n            favedBy: []\n          }).then(function (docRef) {\n            return console.log('Book added', docRef.id);\n          }).then(function () {// window.location.reload();\n          });\n        });\n      } else {\n        db.doc(flag).collection('Books').add({\n          title: _this.state.title,\n          genre: _this.state.genre,\n          paperback: _this.state.paperback,\n          publisher: _this.state.publisher,\n          language: _this.state.language,\n          publicationDate: _this.state.publicationDate,\n          coverUrl: _this.state.url,\n          favedBy: []\n        }).then(function (docRef) {\n          return console.log('Book added', docRef.id);\n        }).then(function () {// window.location.reload();\n        });\n      }\n    };\n\n    _this.state = {\n      authors: [],\n      books: [],\n      title: '',\n      author: '',\n      genre: '',\n      paperback: '',\n      publisher: '',\n      language: '',\n      publicationDate: '',\n      image: null,\n      filename: '',\n      url: '',\n      formErrors: {\n        title: '',\n        author: '',\n        genre: '',\n        paperback: '',\n        publisher: '',\n        language: '',\n        publicationDate: ''\n      },\n      titleValid: false,\n      authorValid: false,\n      genreValid: false,\n      paperbackValid: false,\n      publisherValid: false,\n      languageValid: false,\n      publicationDateValid: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var settings = {\n        timestampsInSnapshots: true\n      };\n      firebase.firestore().settings(settings);\n      var db = firebase.firestore();\n      db.collection('Authors').get().then(function (querySnapshot) {\n        var authors = [];\n        querySnapshot.forEach(function (doc) {\n          return authors.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          authors: authors\n        });\n\n        var books = [];\n\n        _this2.state.authors.forEach(function (author) {\n          return db.collection('Authors').doc(author.id).collection('Books').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              return books.push(_objectSpread({\n                id: doc.id,\n                authorid: author.id,\n                author: author.name\n              }, doc.data()));\n            });\n\n            _this2.setState({\n              books: books\n            });\n          });\n        });\n      });\n      console.log('Got Books');\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var titleValid = this.state.titleValid;\n      var authorValid = this.state.authorValid;\n      var genreValid = this.state.genreValid;\n      var paperbackValid = this.state.paperbackValid;\n      var publisherValid = this.state.publisherValid;\n      var languageValid = this.state.languageValid;\n      var publicationDateValid = this.state.publicationDateValid;\n\n      switch (fieldName) {\n        case 'title':\n          titleValid = value.length >= 1;\n          fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n          break;\n\n        case 'author':\n          authorValid = value.length >= 1;\n          fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n          break;\n\n        case 'genre':\n          genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n\n          fieldValidationErrors.Genre = genreValid ? '' : ' is too short or contains number';\n          break;\n\n        case 'paperback':\n          paperbackValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n          fieldValidationErrors.Paperback = paperbackValid ? '' : ' must contain number';\n          break;\n\n        case 'publisher':\n          publisherValid = value.length >= 3;\n          fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n          break;\n\n        case 'language':\n          languageValid = value.length >= 2; //PL\n\n          fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n          break;\n\n        case 'publicationDate':\n          publicationDateValid = true; // do poprawy\n\n          fieldValidationErrors.Publication_Date = publicationDateValid ? '' : ' is in incorrect format';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        titleValid: titleValid,\n        authorValid: authorValid,\n        genreValid: genreValid,\n        paperbackValid: paperbackValid,\n        publisherValid: publisherValid,\n        languageValid: languageValid,\n        publicationDateValid: publicationDateValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.titleValid && this.state.authorValid && this.state.genreValid && this.state.paperbackValid && this.state.publisherValid && this.state.languageValid && this.state.publicationDateValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(SubHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInput,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"genre\",\n        placeholder: \"Genre\",\n        onChange: this.updateInput,\n        value: this.state.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"paperback\",\n        placeholder: \"Paperback\",\n        onChange: this.updateInput,\n        value: this.state.paperback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"publisher\",\n        placeholder: \"Publisher\",\n        onChange: this.updateInput,\n        value: this.state.publisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"language\",\n        placeholder: \"Language\",\n        onChange: this.updateInput,\n        value: this.state.language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"publicationDate\",\n        placeholder: \"Publication date (dd-mm-yyyy)\",\n        onChange: this.updateInput,\n        value: this.state.publicationDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(BasicButton, {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Listing, {\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Listing","FormErrors","BasicButton","BasicInput","SubHeader","Body","AddBook","props","handleChange","e","target","files","image","setState","filename","name","updateInput","value","validateField","addToDb","preventDefault","state","storageRef","storage","ref","uploadImage","put","on","snapshot","error","downloadURL","getDownloadURL","url","author","flag","authors","map","id","db","firestore","collection","add","addedBy","auth","currentUser","uid","then","docRef","console","log","doc","title","genre","paperback","publisher","language","publicationDate","coverUrl","favedBy","books","formErrors","titleValid","authorValid","genreValid","paperbackValid","publisherValid","languageValid","publicationDateValid","bind","settings","timestampsInSnapshots","get","querySnapshot","forEach","push","data","authorid","fieldName","fieldValidationErrors","length","Title","Author","match","Genre","Paperback","Publisher","Language","Publication_Date","validateForm","formValid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\n\n\nclass AddBook extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            authors: [],\n            books: [],\n            title: '',\n            author: '',\n            genre: '',\n            paperback: '',\n            publisher: '',\n            language: '',\n            publicationDate: '',\n            image: null,\n            filename: '',\n            url: '',\n            formErrors: {\n                title: '',\n                author: '',\n                genre: '',\n                paperback: '',\n                publisher: '',\n                language: '',\n                publicationDate: ''\n            },\n            titleValid: false,\n            authorValid: false,\n            genreValid: false,\n            paperbackValid: false,\n            publisherValid: false,\n            languageValid: false,\n            publicationDateValid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n        }\n    }\n\n    updateInput = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(\n            {\n                [name]: value\n            },\n            () => {\n                this.validateField(name, value);\n            }\n        );\n    };\n\n    componentDidMount() {\n        const settings = { timestampsInSnapshots: true };\n        firebase.firestore().settings(settings);\n\n        var db = firebase.firestore()\n        db.collection('Authors')\n            .get().then(querySnapshot => {\n                const authors = []\n                querySnapshot.forEach(doc =>\n                    authors.push({ id: doc.id, ...doc.data() })\n                )\n                this.setState({ authors: authors })\n                const books = []\n                this.state.authors.forEach(author =>\n                    db.collection('Authors').doc(author.id).collection('Books')\n                        .get().then(querySnapshot => {\n\n                            querySnapshot.forEach(doc =>\n                                books.push({\n                                    id: doc.id,\n                                    authorid: author.id,\n                                    author: author.name,\n                                    ...doc.data()\n                                })\n                            )\n                            this.setState({ books: books })\n                        })\n                )\n            })\n        console.log('Got Books')\n    }\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n        }, function (error) {\n        }, function () {\n            var downloadURL = uploadImage.snapshot.ref.getDownloadURL()\n            this.setState({ url: downloadURL })\n        });\n\n        let author = this.state.author\n        var flag = null\n        this.state.authors.map(function (e) {\n            if (e.name == author) { flag = e.id }\n        })\n        var db = firebase.firestore().collection('Authors')\n        if (flag == null) {\n            db.add({\n                name: this.state.author,\n                addedBy: firebase.auth().currentUser.uid\n            }).then(docRef => {\n                console.log('Author added', docRef.id);\n                db.doc(docRef.id).collection('Books').add({\n                    title: this.state.title,\n                    genre: this.state.genre,\n                    paperback: this.state.paperback,\n                    publisher: this.state.publisher,\n                    language: this.state.language,\n                    publicationDate: this.state.publicationDate,\n                    coverUrl: this.state.url,\n                    favedBy: []\n                }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                    // window.location.reload();\n                });\n            })\n        } else {\n            db.doc(flag).collection('Books').add({\n                title: this.state.title,\n                genre: this.state.genre,\n                paperback: this.state.paperback,\n                publisher: this.state.publisher,\n                language: this.state.language,\n                publicationDate: this.state.publicationDate,\n                coverUrl: this.state.url,\n                favedBy: []\n            }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                // window.location.reload();\n            });\n        }\n\n\n    };\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let authorValid = this.state.authorValid;\n        let genreValid = this.state.genreValid;\n        let paperbackValid = this.state.paperbackValid;\n        let publisherValid = this.state.publisherValid;\n        let languageValid = this.state.languageValid;\n        let publicationDateValid = this.state.publicationDateValid;\n\n        switch (fieldName) {\n            case 'title':\n                titleValid = value.length >= 1;\n                fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n                break;\n            case 'author':\n                authorValid = value.length >= 1;\n                fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n                break;\n            case 'genre':\n                genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n                fieldValidationErrors.Genre = genreValid\n                    ? ''\n                    : ' is too short or contains number';\n                break;\n            case 'paperback':\n                paperbackValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n                fieldValidationErrors.Paperback = paperbackValid\n                    ? ''\n                    : ' must contain number';\n                break;\n            case 'publisher':\n                publisherValid = value.length >= 3;\n                fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n                break;\n            case 'language':\n                languageValid = value.length >= 2; //PL\n                fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n                break;\n            case 'publicationDate':\n                publicationDateValid = true; // do poprawy\n                fieldValidationErrors.Publication_Date = publicationDateValid\n                    ? ''\n                    : ' is in incorrect format';\n                break;\n            default:\n                break;\n        }\n        this.setState(\n            {\n                formErrors: fieldValidationErrors,\n                titleValid,\n                authorValid,\n                genreValid,\n                paperbackValid,\n                publisherValid,\n                languageValid,\n                publicationDateValid\n            },\n            this.validateForm\n        );\n    }\n\n    validateForm() {\n        this.setState({\n            formValid:\n                this.state.titleValid &&\n                this.state.authorValid &&\n                this.state.genreValid &&\n                this.state.paperbackValid &&\n                this.state.publisherValid &&\n                this.state.languageValid &&\n                this.state.publicationDateValid\n        });\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <SubHeader>\n                    <div>\n                        <p>Add additional books:</p>\n                        <form onSubmit={this.addToDb}>\n                            <BasicInput\n                                type=\"text\"\n                                name=\"title\"\n                                placeholder=\"Title\"\n                                onChange={this.updateInput}\n                                value={this.state.title}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"author\"\n                                placeholder=\"Author\"\n                                onChange={this.updateInput}\n                                value={this.state.author}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"genre\"\n                                placeholder=\"Genre\"\n                                onChange={this.updateInput}\n                                value={this.state.genre}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"paperback\"\n                                placeholder=\"Paperback\"\n                                onChange={this.updateInput}\n                                value={this.state.paperback}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"publisher\"\n                                placeholder=\"Publisher\"\n                                onChange={this.updateInput}\n                                value={this.state.publisher}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"language\"\n                                placeholder=\"Language\"\n                                onChange={this.updateInput}\n                                value={this.state.language}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"publicationDate\"\n                                placeholder=\"Publication date (dd-mm-yyyy)\"\n                                onChange={this.updateInput}\n                                value={this.state.publicationDate}\n                            />\n                            <input type=\"file\" onChange={this.handleChange} />\n                            <div>\n                                <BasicButton type=\"submit\" disabled={!this.state.formValid}>\n                                    Submit\n                            </BasicButton>\n                            </div>\n                        </form>\n                        <FormErrors formErrors={this.state.formErrors} />\n                    </div>\n                    <br />\n                </SubHeader>\n                <Body>\n                    <Listing books={this.state.books} />\n                </Body>\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}