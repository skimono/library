{"ast":null,"code":"import _objectSpread from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/AddingBooks.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n\n        _this.setState({\n          filename: image.name\n        });\n\n        _this.setState({\n          url: '/images/' + image.name\n        });\n      }\n    };\n\n    _this.updateInput = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n    };\n\n    _this.addToDb = function (e) {\n      e.preventDefault();\n      var filename = _this.state.filename;\n      var storageRef = firebase.storage().ref('/images/' + filename);\n      var uploadImage = storageRef.put(_this.state.image);\n      uploadImage.on('state_changed', function (snapshot) {}, function (error) {}, function () {\n        var _this2 = this;\n\n        var url = null;\n        uploadImage.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          _this2.url = downloadURL;\n        });\n        this.setState({\n          url: url\n        });\n        console.log('File available at', this.state.url);\n      });\n      var author = _this.state.author;\n      var flag = null;\n\n      _this.state.authors.map(function (e) {\n        if (e.name == author) {\n          flag = e.id;\n        }\n      });\n\n      console.log('author id from flag', flag);\n      var db = firebase.firestore().collection('Authors');\n\n      if (flag == null) {\n        db.add({\n          name: _this.state.author,\n          addedBy: firebase.auth().currentUser.uid\n        }).then(function (docRef) {\n          console.log('Author added', docRef.id);\n          db.doc(docRef.id).collection('Books').add({\n            title: _this.state.title,\n            genre: _this.state.genre,\n            pages: _this.state.pages,\n            publisher: _this.state.publisher,\n            language: _this.state.language,\n            coverUrl: _this.state.url,\n            favedBy: []\n          }).then(function (docRef) {\n            return console.log('Book added', docRef.id);\n          }).then(function () {// window.location.reload();\n          });\n        });\n      } else {\n        db.doc(flag).collection('Books').add({\n          title: _this.state.title,\n          genre: _this.state.genre,\n          pages: _this.state.pages,\n          publisher: _this.state.publisher,\n          language: _this.state.language,\n          coverUrl: _this.state.url,\n          favedBy: []\n        }).then(function (docRef) {\n          return console.log('Book added', docRef.id);\n        }).then(function () {// window.location.reload();\n        });\n      }\n    };\n\n    _this.state = {\n      authors: [],\n      books: [],\n      title: '',\n      author: '',\n      genre: '',\n      pages: '',\n      publisher: '',\n      language: '',\n      image: null,\n      filename: '',\n      url: '',\n      formErrors: {\n        title: '',\n        author: '',\n        genre: '',\n        pages: '',\n        publisher: '',\n        language: ''\n      },\n      titleValid: false,\n      authorValid: false,\n      genreValid: false,\n      pagesValid: false,\n      publisherValid: false,\n      languageValid: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var settings = {\n        timestampsInSnapshots: true\n      };\n      firebase.firestore().settings(settings);\n      var db = firebase.firestore();\n      db.collection('Authors').onSnapshot(function (querySnapshot) {\n        var authors = [];\n        querySnapshot.forEach(function (doc) {\n          return authors.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this3.setState({\n          authors: authors\n        });\n\n        var books = [];\n\n        _this3.state.authors.forEach(function (author) {\n          return db.collection('Authors').doc(author.id).collection('Books').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              return books.push(_objectSpread({\n                id: doc.id,\n                authorid: author.id,\n                author: author.name\n              }, doc.data()));\n            });\n\n            _this3.setState({\n              books: books\n            });\n          });\n        });\n      });\n      console.log('Got Books');\n    }\n  }, {\n    key: \"validateField\",\n    value: function validateField(fieldName, value) {\n      var fieldValidationErrors = this.state.formErrors;\n      var titleValid = this.state.titleValid;\n      var authorValid = this.state.authorValid;\n      var genreValid = this.state.genreValid;\n      var pagesValid = this.state.pagesValid;\n      var publisherValid = this.state.publisherValid;\n      var languageValid = this.state.languageValid;\n\n      switch (fieldName) {\n        case 'title':\n          titleValid = value.length >= 1;\n          fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n          break;\n\n        case 'author':\n          authorValid = value.length >= 1;\n          fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n          break;\n\n        case 'genre':\n          genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n\n          fieldValidationErrors.Genre = genreValid ? '' : ' is too short or contains number';\n          break;\n\n        case 'pages':\n          pagesValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n          fieldValidationErrors.Pages = pagesValid ? '' : ' must contain number';\n          break;\n\n        case 'publisher':\n          publisherValid = value.length >= 3;\n          fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n          break;\n\n        case 'language':\n          languageValid = value.length >= 2; //PL\n\n          fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors: fieldValidationErrors,\n        titleValid: titleValid,\n        authorValid: authorValid,\n        genreValid: genreValid,\n        pagesValid: pagesValid,\n        publisherValid: publisherValid,\n        languageValid: languageValid\n      }, this.validateForm);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        formValid: this.state.titleValid && this.state.authorValid && this.state.genreValid && this.state.pagesValid && this.state.publisherValid && this.state.languageValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(SubHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Add additional books:\"), React.createElement(\"form\", {\n        onSubmit: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: this.updateInput,\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: this.updateInput,\n        value: this.state.author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"genre\",\n        placeholder: \"Genre\",\n        onChange: this.updateInput,\n        value: this.state.genre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"pages\",\n        placeholder: \"Pages\",\n        onChange: this.updateInput,\n        value: this.state.pages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"publisher\",\n        placeholder: \"Publisher\",\n        onChange: this.updateInput,\n        value: this.state.publisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(BasicInput, {\n        type: \"text\",\n        name: \"language\",\n        placeholder: \"Language\",\n        onChange: this.updateInput,\n        value: this.state.language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(BasicButton, {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Listing, {\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default AddBook;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/AddingBooks.js"],"names":["React","Component","firebase","Listing","FormErrors","BasicButton","BasicInput","SubHeader","Body","AddBook","props","handleChange","e","target","files","image","setState","filename","name","url","updateInput","value","validateField","addToDb","preventDefault","state","storageRef","storage","ref","uploadImage","put","on","snapshot","error","getDownloadURL","then","downloadURL","console","log","author","flag","authors","map","id","db","firestore","collection","add","addedBy","auth","currentUser","uid","docRef","doc","title","genre","pages","publisher","language","coverUrl","favedBy","books","formErrors","titleValid","authorValid","genreValid","pagesValid","publisherValid","languageValid","bind","settings","timestampsInSnapshots","onSnapshot","querySnapshot","forEach","push","data","get","authorid","fieldName","fieldValidationErrors","length","Title","Author","match","Genre","Pages","Publisher","Language","validateForm","formValid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\n\n\nclass AddBook extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            authors: [],\n            books: [],\n            title: '',\n            author: '',\n            genre: '',\n            pages: '',\n            publisher: '',\n            language: '',\n            image: null,\n            filename: '',\n            url: '',\n            formErrors: {\n                title: '',\n                author: '',\n                genre: '',\n                pages: '',\n                publisher: '',\n                language: ''\n            },\n            titleValid: false,\n            authorValid: false,\n            genreValid: false,\n            pagesValid: false,\n            publisherValid: false,\n            languageValid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n            this.setState({ url: '/images/' + image.name });\n        }\n    }\n\n    updateInput = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(\n            {\n                [name]: value\n            },\n            () => {\n                this.validateField(name, value);\n            }\n        );\n    };\n\n    componentDidMount() {\n        const settings = { timestampsInSnapshots: true };\n        firebase.firestore().settings(settings);\n\n        var db = firebase.firestore()\n        db.collection('Authors')\n            .onSnapshot(querySnapshot => {\n                const authors = []\n                querySnapshot.forEach(doc =>\n                    authors.push({ id: doc.id, ...doc.data() })\n                )\n                this.setState({ authors: authors })\n                const books = []\n                this.state.authors.forEach(author =>\n                    db.collection('Authors').doc(author.id).collection('Books')\n                        .get().then(querySnapshot => {\n                            querySnapshot.forEach(doc =>\n                                books.push({\n                                    id: doc.id,\n                                    authorid: author.id,\n                                    author: author.name,\n                                    ...doc.data()\n                                })\n                            )\n                            this.setState({ books: books })\n                        })\n                )\n            })\n        console.log('Got Books')\n    }\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n        }, function (error) {\n        }, function () {\n            const url = null\n            uploadImage.snapshot.ref.getDownloadURL()\n                .then((downloadURL) => {\n                    this.url = downloadURL\n                })\n                this.setState({ url: url })\n                console.log('File available at', this.state.url);\n        });\n\n        let author = this.state.author\n        var flag = null\n        this.state.authors.map(function (e) {\n            if (e.name == author) { flag = e.id }\n        })\n        console.log('author id from flag', flag);\n        var db = firebase.firestore().collection('Authors')\n        if (flag == null) {\n            db.add({\n                name: this.state.author,\n                addedBy: firebase.auth().currentUser.uid\n            }).then(docRef => {\n                console.log('Author added', docRef.id);\n                db.doc(docRef.id).collection('Books').add({\n                    title: this.state.title,\n                    genre: this.state.genre,\n                    pages: this.state.pages,\n                    publisher: this.state.publisher,\n                    language: this.state.language,\n                    coverUrl: this.state.url,\n                    favedBy: []\n                }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                    // window.location.reload();\n                });\n            })\n        } else {\n            db.doc(flag).collection('Books').add({\n                title: this.state.title,\n                genre: this.state.genre,\n                pages: this.state.pages,\n                publisher: this.state.publisher,\n                language: this.state.language,\n                coverUrl: this.state.url,\n                favedBy: []\n            }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                // window.location.reload();\n            });\n        }\n\n\n    };\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let authorValid = this.state.authorValid;\n        let genreValid = this.state.genreValid;\n        let pagesValid = this.state.pagesValid;\n        let publisherValid = this.state.publisherValid;\n        let languageValid = this.state.languageValid;\n\n        switch (fieldName) {\n            case 'title':\n                titleValid = value.length >= 1;\n                fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n                break;\n            case 'author':\n                authorValid = value.length >= 1;\n                fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n                break;\n            case 'genre':\n                genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n                fieldValidationErrors.Genre = genreValid\n                    ? ''\n                    : ' is too short or contains number';\n                break;\n            case 'pages':\n                pagesValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n                fieldValidationErrors.Pages = pagesValid\n                    ? ''\n                    : ' must contain number';\n                break;\n            case 'publisher':\n                publisherValid = value.length >= 3;\n                fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n                break;\n            case 'language':\n                languageValid = value.length >= 2; //PL\n                fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n                break;\n            default:\n                break;\n        }\n        this.setState(\n            {\n                formErrors: fieldValidationErrors,\n                titleValid,\n                authorValid,\n                genreValid,\n                pagesValid,\n                publisherValid,\n                languageValid\n            },\n            this.validateForm\n        );\n    }\n\n    validateForm() {\n        this.setState({\n            formValid:\n                this.state.titleValid &&\n                this.state.authorValid &&\n                this.state.genreValid &&\n                this.state.pagesValid &&\n                this.state.publisherValid &&\n                this.state.languageValid\n        });\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <SubHeader>\n                    <div>\n                        <p>Add additional books:</p>\n                        <form onSubmit={this.addToDb}>\n                            <BasicInput\n                                type=\"text\"\n                                name=\"title\"\n                                placeholder=\"Title\"\n                                onChange={this.updateInput}\n                                value={this.state.title}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"author\"\n                                placeholder=\"Author\"\n                                onChange={this.updateInput}\n                                value={this.state.author}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"genre\"\n                                placeholder=\"Genre\"\n                                onChange={this.updateInput}\n                                value={this.state.genre}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"pages\"\n                                placeholder=\"Pages\"\n                                onChange={this.updateInput}\n                                value={this.state.pages}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"publisher\"\n                                placeholder=\"Publisher\"\n                                onChange={this.updateInput}\n                                value={this.state.publisher}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"language\"\n                                placeholder=\"Language\"\n                                onChange={this.updateInput}\n                                value={this.state.language}\n                            />\n                            <input type=\"file\" onChange={this.handleChange} />\n                            <div>\n                                <BasicButton type=\"submit\" disabled={!this.state.formValid}>\n                                    Submit\n                            </BasicButton>\n                            </div>\n                        </form>\n                        <FormErrors formErrors={this.state.formErrors} />\n                    </div>\n                    <br />\n                </SubHeader>\n                <Body>\n                    <Listing books={this.state.books} />\n                </Body>\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}