{"ast":null,"code":"import _objectSpread from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/App.js\";\nimport React, { Component } from 'react';\nimport Login from './components/Login';\nimport AddingBook from './components/AddingBooks';\nimport firebase from 'firebase';\nimport { Wrapper, Header, Body, Title, Greeting, BasicButton } from './styles.js';\nvar config = {\n  //firebase setup\n  apiKey: 'AIzaSyDb6MxVPz02Dzu6TBU6uRMZk6lSfsEuH8E',\n  authDomain: 'solwit-pjatk-arc-2018-gr3.firebaseapp.com',\n  databaseURL: 'https://solwit-pjatk-arc-2018-gr3.firebaseio.com/',\n  projectId: 'solwit-pjatk-arc-2018-gr3',\n  storageBucket: 'solwit-pjatk-arc-2018-gr3.appspot.com',\n  messagingSenderId: '314895835823'\n};\nfirebase.initializeApp(config);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false,\n      authors: [],\n      books: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loggedInMount\",\n    value: function loggedInMount() {\n      var _this2 = this;\n\n      var db = firebase.firestore();\n      db.collection('Authors').get().then(function (querySnapshot) {\n        var authors = [];\n        querySnapshot.forEach(function (doc) {\n          return authors.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n\n        _this2.setState({\n          authors: authors\n        });\n\n        var books = [];\n\n        _this2.state.authors.forEach(function (author) {\n          return db.collection('Authors').doc(author.id).collection('Books').get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n              return books.push(_objectSpread({\n                id: doc.id,\n                authorid: author.id,\n                author: author.name\n              }, doc.data()));\n            });\n\n            _this2.setState({\n              books: books\n            });\n          });\n        });\n      });\n      console.log('Got Books');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n        return _this3.setState({\n          isLoggedIn: !!user\n        });\n      });\n      var settings = {\n        timestampsInSnapshots: true\n      };\n      firebase.firestore().settings(settings);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unregisterAuthObserver();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoggedIn = this.state.isLoggedIn;\n      this.loggedInMount();\n\n      if (!isLoggedIn) {\n        return React.createElement(Login, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Wrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Library test app for Expedition project\"), React.createElement(Greeting, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Welcome \", firebase.auth().currentUser.displayName, \"! You are now logged-in!\"), React.createElement(BasicButton, {\n          onClick: function onClick() {\n            return firebase.auth().signOut();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Logout\")), React.createElement(Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(AddingBook, {\n          authors: this.state.authors,\n          books: this.state.books,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/App.js"],"names":["React","Component","Login","AddingBook","firebase","Wrapper","Header","Body","Title","Greeting","BasicButton","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","App","state","isLoggedIn","authors","books","db","firestore","collection","get","then","querySnapshot","forEach","doc","push","id","data","setState","author","authorid","name","console","log","unregisterAuthObserver","auth","onAuthStateChanged","user","settings","timestampsInSnapshots","loggedInMount","currentUser","displayName","signOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Login from './components/Login';\nimport AddingBook from './components/AddingBooks';\nimport firebase from 'firebase';\nimport { Wrapper, Header, Body, Title, Greeting, BasicButton } from './styles.js';\n\nvar config = {\n  //firebase setup\n  apiKey: 'AIzaSyDb6MxVPz02Dzu6TBU6uRMZk6lSfsEuH8E',\n  authDomain: 'solwit-pjatk-arc-2018-gr3.firebaseapp.com',\n  databaseURL: 'https://solwit-pjatk-arc-2018-gr3.firebaseio.com/',\n  projectId: 'solwit-pjatk-arc-2018-gr3',\n  storageBucket: 'solwit-pjatk-arc-2018-gr3.appspot.com',\n  messagingSenderId: '314895835823'\n};\nfirebase.initializeApp(config);\n\nclass App extends Component {\n  state = {\n    isLoggedIn: false,\n    authors: [],\n    books: []\n  };\n\n  loggedInMount() {\n    var db = firebase.firestore()\n    db.collection('Authors')\n      .get().then(querySnapshot => {\n        const authors = []\n        querySnapshot.forEach(doc =>\n          authors.push({ id: doc.id, ...doc.data() })\n        )\n        this.setState({ authors: authors })\n        const books = []\n        this.state.authors.forEach(author =>\n          db.collection('Authors').doc(author.id).collection('Books')\n            .get().then(querySnapshot => {\n\n              querySnapshot.forEach(doc =>\n                books.push({\n                  id: doc.id,\n                  authorid: author.id,\n                  author: author.name,\n                  ...doc.data()\n                })\n              )\n              this.setState({ books: books })\n            })\n        )\n      })\n    console.log('Got Books')\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isLoggedIn: !!user }));\n\n    const settings = { timestampsInSnapshots: true };\n    firebase.firestore().settings(settings);\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    const { isLoggedIn } = this.state;\n    this.loggedInMount()\n\n    if (!isLoggedIn) {\n      return <Login />;\n    } else {      \n      return (\n        <Wrapper>\n          <Header>\n            <Title>Library test app for Expedition project</Title>\n            <Greeting>\n              Welcome {firebase.auth().currentUser.displayName}! You are now logged-in!\n            </Greeting>\n            <BasicButton onClick={() => firebase.auth().signOut()}>Logout</BasicButton>\n          </Header>\n          <Body>\n            <AddingBook authors={this.state.authors} books={this.state.books} />\n          </Body>\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}