{"ast":null,"code":"import _readOnlyError from \"/home/whitewolf/projekt/expedition/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"/home/whitewolf/projekt/expedition/src/components/OpenWeatherData.js\";\nimport React from \"react\";\nvar Data = null;\nif (props != null) Data = (_readOnlyError(\"Data\"), React.createElement(\"div\", {\n  className: \"weather__info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, props.city && props.country && React.createElement(\"p\", {\n  className: \"weather__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \" Location:\", React.createElement(\"span\", {\n  className: \"weather__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \" \", props.city, \", \", props.country)), props.temperature && React.createElement(\"p\", {\n  className: \"weather__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \" Temperature:\", React.createElement(\"span\", {\n  className: \"weather__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \" \", props.temperature), \"\\xB0C\"), props.humidity && React.createElement(\"p\", {\n  className: \"weather__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \" Humidity:\", React.createElement(\"span\", {\n  className: \"weather__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \" \", props.humidity), \"%\"), props.description && React.createElement(\"p\", {\n  className: \"weather__key\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \" Conditions:\", React.createElement(\"span\", {\n  className: \"weather__value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \" \", props.description, \" \")), props.error && React.createElement(\"p\", {\n  className: \"weather__error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, props.error)));\nexport default Data;","map":{"version":3,"sources":["/home/whitewolf/projekt/expedition/src/components/OpenWeatherData.js"],"names":["React","Data","props","city","country","temperature","humidity","description","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI,GAAG,IAAb;AAEA,IAAGC,KAAK,IAAG,IAAX,EAAiBD,IAAI,4BACpB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEEC,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,OAApB,IAA+B;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC9B;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoCF,KAAK,CAACC,IAA1C,QAAoDD,KAAK,CAACE,OAA1D,CAD8B,CAFjC,EAOEF,KAAK,CAACG,WAAN,IAAqB;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACpB;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoCH,KAAK,CAACG,WAA1C,CADoB,UAPvB,EAYEH,KAAK,CAACI,QAAN,IAAkB;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACjB;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoCJ,KAAK,CAACI,QAA1C,CADiB,MAZpB,EAiBEJ,KAAK,CAACK,WAAN,IAAqB;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACpB;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAoCL,KAAK,CAACK,WAA1C,MADoB,CAjBvB,EAsBEL,KAAK,CAACM,KAAN,IAAe;AAAG,EAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAgCN,KAAK,CAACM,KAAtC,CAtBjB,CADoB,CAAJ;AA4BjB,eAAeP,IAAf","sourcesContent":["import React from \"react\";\n\nconst Data = null;\n\nif(props !=null) Data = (\n\t<div className=\"weather__info\">\n\t {\t\n\t \tprops.city && props.country && <p className=\"weather__key\"> Location: \n\t \t\t<span className=\"weather__value\"> { props.city }, { props.country }</span>\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.temperature && <p className=\"weather__key\"> Temperature: \n\t \t\t<span className=\"weather__value\"> { props.temperature }</span>Â°C\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.humidity && <p className=\"weather__key\"> Humidity: \n\t \t\t<span className=\"weather__value\"> { props.humidity }</span>%\n\t \t</p> \n\t }\n\t { \t\n\t \tprops.description && <p className=\"weather__key\"> Conditions: \n\t \t\t<span className=\"weather__value\"> { props.description } </span>\n\t </p> \n\t }\n\t { \n\t \tprops.error && <p className=\"weather__error\">{ props.error }</p>  \n\t }\n\t</div>\n);\n\nexport default Data;"]},"metadata":{},"sourceType":"module"}