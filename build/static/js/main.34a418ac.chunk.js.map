{"version":3,"sources":["styles.js","components/Login.js","components/Books.js","components/Listing.js","components/FormErrors.js","components/AddingBooks.js","App.js","components/ServiceWorker.js","index.js"],"names":["Wrapper","styled","div","_templateObject","BasicPageElement","_templateObject2","Header","_templateObject3","SubHeader","_templateObject4","Body","_templateObject5","Title","h1","_templateObject6","Greeting","p","_templateObject7","BasicButton","button","_templateObject8","BasicInput","input","_templateObject9","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","Login","react_default","a","createElement","StyledFirebaseAuth_default","firebaseAuth","Component","Books","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickSetFav","favState","state","fav","booksRef","firestore","collection","doc","books","authorid","id","update","favedBy","FieldValue","arrayRemove","currentUser","uid","then","console","log","arrayUnion","setState","includes","Fragment","src","coverUrl","alt","title","height","width","author","onClick","className","Listing","map","b","components_Books","key","FormErrors","_ref","formErrors","keys","fieldName","i","length","AddBook","handleChange","e","target","files","image","filename","name","url","updateInput","value","defineProperty","validateField","addToDb","preventDefault","uploadImage","storage","ref","put","on","snapshot","error","getDownloadURL","downloadURL","flag","authors","db","add","addedBy","docRef","genre","paperback","publisher","language","window","location","reload","titleValid","authorValid","genreValid","paperbackValid","publisherValid","languageValid","bind","assertThisInitialized","_this2","settings","timestampsInSnapshots","get","querySnapshot","forEach","push","objectSpread","data","fieldValidationErrors","Author","match","Genre","Paperback","Publisher","Language","validateForm","formValid","onSubmit","type","placeholder","onChange","disabled","FormErrors_FormErrors","components_Listing","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","isLoggedIn","unregisterAuthObserver","onAuthStateChanged","user","displayName","signOut","AddingBooks","components_Login","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34a418ac.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nconst BasicPageElement = styled.div`\n  padding: 20px;\n  color: white;\n`;\n\nexport const Header = styled(BasicPageElement)`\n  background-color: #222;\n`;\n\nexport const SubHeader = styled(BasicPageElement)`\n  padding: 30px;\n  background-color: #333;\n`;\n\nexport const Body =styled(BasicPageElement)`\n  background-color: #555;\n`;\n\n\nexport const Title = styled.h1`\n  font-size: 1.3em;\n`;\n\nexport const Greeting = styled.p`\n  color: white;\n`;\n\nexport const BasicButton = styled.button`\n  font-family: inherit;\n  font-size: 1rem;\n  border-radius: 0;\n  padding: 0.25rem 1rem;\n  margin: 0 1rem;\n  background: transparent;\n  color: white\n  border: 2px solid;\n`;\n\nexport const BasicInput = styled.input`\n  font-family: inherit;\n  font-size: 1rem;\n  border-radius: 0;\n  padding: 0.25rem 1rem;\n  margin: 0 1rem;\n  margin-bottom: 0.3rem;\n  background: #777;\n  color: white;\n  border: 2px solid;\n`;","import React, { Component } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport { Wrapper, Header, Title, Greeting} from '../styles.js';\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nclass Login extends Component {\n  render() {\n    return (\n      <Wrapper>\n          <Header>\n            <Title>Library test app for Expedition project</Title>\n            <Greeting>Please Log-in:</Greeting>\n            {\n              <StyledFirebaseAuth\n                uiConfig={uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            }\n          </Header>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport firebase from 'firebase'\n\nclass Books extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fav: false,\n    };\n  }\n\n  componentDidMount() {\n    let favState = this.state.fav;\n    if (this.props.books.favedBy.includes(firebase.auth().currentUser.uid)) {\n      favState = !favState;\n      this.setState({ fav: favState })\n    }\n  }\n\n  onClickSetFav = () => {\n    let favState = this.state.fav;\n\n    var booksRef = firebase.firestore().collection(\"Authors\").doc(this.props.books.authorid).collection('Books').doc(this.props.books.id);\n    this.state.fav ? (\n      booksRef.update({\n        favedBy: firebase.firestore.FieldValue.arrayRemove(firebase.auth().currentUser.uid)\n      }).then(() => console.log('Book unfaved'))\n    ) : (\n        booksRef.update({\n          favedBy: firebase.firestore.FieldValue.arrayUnion(firebase.auth().currentUser.uid)\n        }).then(() => console.log('Book faved'))\n      )\n\n    favState = !favState;\n    this.setState({ fav: favState });\n  };\n\n  render() {\n    const { books } = this.props;\n\n    return (\n      <React.Fragment>\n        <tr>\n          <td>\n            <img src={books.coverUrl} alt={books.title + ' cover'} height='400' width='300' /> \n          </td>\n            <td>{books.title}</td>\n            <td>{books.author}</td>\n            <td><button onClick={this.onClickSetFav}>\n              {this.state.fav ? (\n                <i className=\"fas fa-heart\" />\n              ) : (\n                  <i className=\"far fa-heart\" />\n                )}\n            </button></td>\n        </tr>\n      </React.Fragment>\n        );\n      }\n    }\n    export default Books;\n","import React, { Component } from 'react'\nimport Books from './Books'\n\nclass Listing extends Component {\n\n    render() {\n        const { books } = this.props\n\n        return (\n            <div>\n                <p>List of known books:</p>\n                <table>\n                <tbody>\n                    <tr>\n                        <th>Cover</th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Favorite</th>\n                    </tr>\n                    {books.map(b =>\n                        <Books key={b.id} books={b} />\n                    )}\n                     </tbody>\n                </table>\n            </div>\n        )\n    }\n}\nexport default Listing;","import React from 'react';\n\nexport const FormErrors = ({ formErrors }) => (\n  <div className=\"formErrors\">\n    {Object.keys(formErrors).map((fieldName, i) => {\n      if (formErrors[fieldName].length > 0) {\n        return (\n          <p key={i}>\n            {fieldName} {formErrors[fieldName]}\n          </p>\n        );\n      } else {\n        return '';\n      }\n    })}\n  </div>\n);","import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport Listing from './Listing';\nimport { FormErrors } from './FormErrors';\nimport { BasicButton, BasicInput, SubHeader, Body } from '../styles.js';\n\n\nclass AddBook extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            authors: [],\n            books: [],\n            title: '',\n            author: '',\n            genre: '',\n            paperback: '',\n            publisher: '',\n            language: '',\n            image: null,\n            filename: '',\n            url: '',\n            formErrors: {\n                title: '',\n                author: '',\n                genre: '',\n                paperback: '',\n                publisher: '',\n                language: ''\n            },\n            titleValid: false,\n            authorValid: false,\n            genreValid: false,\n            paperbackValid: false,\n            publisherValid: false,\n            languageValid: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = e => {\n        if (e.target.files[0]) {\n            const image = e.target.files[0];\n            this.setState(() => ({ image }))\n            this.setState({ filename: image.name });\n            this.setState({ url: '/images/' + image.name });\n        }\n    }\n\n    updateInput = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(\n            {\n                [name]: value\n            },\n            () => {\n                this.validateField(name, value);\n            }\n        );\n    };\n\n    componentDidMount() {\n        const settings = { timestampsInSnapshots: true };\n        firebase.firestore().settings(settings);\n\n        var db = firebase.firestore()\n        db.collection('Authors')\n            .get().then(querySnapshot => {\n                const authors = []\n                querySnapshot.forEach(doc =>\n                    authors.push({ id: doc.id, ...doc.data() })\n                )\n                this.setState({ authors: authors })\n                const books = []\n                this.state.authors.forEach(author =>\n                    db.collection('Authors').doc(author.id).collection('Books')\n                        .get().then(querySnapshot => {\n                            querySnapshot.forEach(doc =>\n                                books.push({\n                                    id: doc.id,\n                                    authorid: author.id,\n                                    author: author.name,\n                                    ...doc.data()\n                                })\n                            )\n                            this.setState({ books: books })\n                        })\n                )\n            })\n        console.log('Got Books')\n    }\n\n    addToDb = e => {\n        e.preventDefault();\n        const { filename } = this.state;\n\n        var storageRef = firebase.storage().ref('/images/' + filename);\n        var uploadImage = storageRef.put(this.state.image);\n\n        uploadImage.on('state_changed', function (snapshot) {\n        }, function (error) {\n        }, function () {\n            var downloadURL = uploadImage.snapshot.ref.getDownloadURL()\n                .then(function (downloadURL) {\n                    console.log('File available at', downloadURL);\n                })\n        });\n\n        let author = this.state.author\n        var flag = null\n        this.state.authors.map(function (e) {\n            if (e.name == author) { flag = e.id }\n        })\n        var db = firebase.firestore().collection('Authors')\n        if (flag == null) {\n            db.add({\n                name: this.state.author,\n                addedBy: firebase.auth().currentUser.uid\n            }).then(docRef => {\n                console.log('Author added', docRef.id);\n                db.doc(docRef.id).collection('Books').add({\n                    title: this.state.title,\n                    genre: this.state.genre,\n                    paperback: this.state.paperback,\n                    publisher: this.state.publisher,\n                    language: this.state.language,\n                    coverUrl: this.state.url,\n                    favedBy: []\n                }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                    window.location.reload();\n                });\n            })\n        } else {\n            db.doc(flag).collection('Books').add({\n                title: this.state.title,\n                genre: this.state.genre,\n                paperback: this.state.paperback,\n                publisher: this.state.publisher,\n                language: this.state.language,\n                coverUrl: this.state.url,\n                favedBy: []\n            }).then(docRef => console.log('Book added', docRef.id)).then(() => {\n                window.location.reload();\n            });\n        }\n\n\n    };\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let authorValid = this.state.authorValid;\n        let genreValid = this.state.genreValid;\n        let paperbackValid = this.state.paperbackValid;\n        let publisherValid = this.state.publisherValid;\n        let languageValid = this.state.languageValid;\n\n        switch (fieldName) {\n            case 'title':\n                titleValid = value.length >= 1;\n                fieldValidationErrors.Title = titleValid ? '' : ' is missing';\n                break;\n            case 'author':\n                authorValid = value.length >= 1;\n                fieldValidationErrors.Author = authorValid ? '' : ' is missing';\n                break;\n            case 'genre':\n                genreValid = value.length >= 3 && !value.match('[0-9]+'); //s-f\n                fieldValidationErrors.Genre = genreValid\n                    ? ''\n                    : ' is too short or contains number';\n                break;\n            case 'paperback':\n                paperbackValid = value.match('^[0-9]+$') && !value.match('^[0]+');\n                fieldValidationErrors.Paperback = paperbackValid\n                    ? ''\n                    : ' must contain number';\n                break;\n            case 'publisher':\n                publisherValid = value.length >= 3;\n                fieldValidationErrors.Publisher = publisherValid ? '' : ' is too short';\n                break;\n            case 'language':\n                languageValid = value.length >= 2; //PL\n                fieldValidationErrors.Language = languageValid ? '' : ' is too short';\n                break;\n            default:\n                break;\n        }\n        this.setState(\n            {\n                formErrors: fieldValidationErrors,\n                titleValid,\n                authorValid,\n                genreValid,\n                paperbackValid,\n                publisherValid,\n                languageValid\n            },\n            this.validateForm\n        );\n    }\n\n    validateForm() {\n        this.setState({\n            formValid:\n                this.state.titleValid &&\n                this.state.authorValid &&\n                this.state.genreValid &&\n                this.state.paperbackValid &&\n                this.state.publisherValid &&\n                this.state.languageValid\n        });\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <SubHeader>\n                    <div>\n                        <p>Add additional books:</p>\n                        <form onSubmit={this.addToDb}>\n                            <BasicInput\n                                type=\"text\"\n                                name=\"title\"\n                                placeholder=\"Title\"\n                                onChange={this.updateInput}\n                                value={this.state.title}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"author\"\n                                placeholder=\"Author\"\n                                onChange={this.updateInput}\n                                value={this.state.author}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"genre\"\n                                placeholder=\"Genre\"\n                                onChange={this.updateInput}\n                                value={this.state.genre}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"paperback\"\n                                placeholder=\"Paperback\"\n                                onChange={this.updateInput}\n                                value={this.state.paperback}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"publisher\"\n                                placeholder=\"Publisher\"\n                                onChange={this.updateInput}\n                                value={this.state.publisher}\n                            />\n                            <BasicInput\n                                type=\"text\"\n                                name=\"language\"\n                                placeholder=\"Language\"\n                                onChange={this.updateInput}\n                                value={this.state.language}\n                            />\n                            <input type=\"file\" onChange={this.handleChange} />\n                            <div>\n                                <BasicButton type=\"submit\" disabled={!this.state.formValid}>\n                                    Submit\n                            </BasicButton>\n                            </div>\n                        </form>\n                        <FormErrors formErrors={this.state.formErrors} />\n                    </div>\n                    <br />\n                </SubHeader>\n                <Body>\n                    <Listing books={this.state.books} />\n                </Body>\n            </React.Fragment>\n        );\n    }\n\n}\nexport default AddBook;","import React, { Component } from 'react';\nimport Login from './components/Login';\nimport AddingBook from './components/AddingBooks';\nimport firebase from 'firebase';\nimport { Wrapper, Header, Title, Greeting, BasicButton } from './styles.js';\n\nvar config = {\n  //firebase setup\n  apiKey: 'AIzaSyDb6MxVPz02Dzu6TBU6uRMZk6lSfsEuH8E',\n  authDomain: 'solwit-pjatk-arc-2018-gr3.firebaseapp.com',\n  databaseURL: 'https://solwit-pjatk-arc-2018-gr3.firebaseio.com/',\n  projectId: 'solwit-pjatk-arc-2018-gr3',\n  storageBucket: 'solwit-pjatk-arc-2018-gr3.appspot.com',\n  messagingSenderId: '314895835823'\n};\nfirebase.initializeApp(config);\n\nclass App extends Component {\n  state = {\n    isLoggedIn: false,\n  };\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged(user => this.setState({ isLoggedIn: !!user }));\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    const { isLoggedIn } = this.state;\n\n    if (!isLoggedIn) {\n      return <Login />;\n    } else {\n      return (\n        <Wrapper>\n          <Header>\n            <Title>Library test app for Expedition project</Title>\n            <Greeting>\n              Welcome {firebase.auth().currentUser.displayName}! You are now logged-in!\n            </Greeting>\n            <BasicButton onClick={() => firebase.auth().signOut()}>Logout</BasicButton>\n          </Header>\n            <AddingBook />\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as ServiceWorker from './components/ServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nServiceWorker.unregister();"],"sourceRoot":""}